This file is a merged representation of a subset of the codebase, containing specifically included files and files not matching ignore patterns, combined into a single document by Repomix.
The content has been processed where comments have been removed, empty lines have been removed, line numbers have been added.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Only files matching these patterns are included: package.json, angular.json, tsconfig.json, tsconfig.app.json, tailwind.config.js, vite.config.ts, src/**/*.{ts,tsx,css,json}
- Files matching these patterns are excluded: *.test.*, *.spec.*, coverage/**, dist/**, .env*, *.db, *.sqlite
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Code comments have been removed from supported file types
- Empty lines have been removed from all files
- Line numbers have been added to the beginning of each line
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<user_provided_header>
Fresh Project Home Showcase
</user_provided_header>

<directory_structure>
angular.json
package.json
src/app/app.component.spec.ts
src/app/app.component.ts
src/app/app.config.server.ts
src/app/app.config.ts
src/app/app.routes.ts
src/app/components/floor-plan.component.ts
src/app/components/layout.component.ts
src/app/components/property-card.component.ts
src/app/components/property-stats.component.ts
src/app/components/room-details.component.ts
src/app/models/property.model.ts
src/app/models/room.model.ts
src/app/pages/index.page.ts
src/app/pages/property/[id].page.ts
src/app/services/property.service.ts
src/app/services/room.service.ts
src/main.server.ts
src/main.ts
src/server/data/properties.json
src/server/data/rooms.json
src/server/routes/api/v1/properties.get.ts
src/server/routes/api/v1/properties/[id].get.ts
src/server/routes/api/v1/rooms.get.ts
src/server/routes/api/v1/rooms/[id].get.ts
src/styles.css
src/test-setup.ts
src/vite-env.d.ts
tailwind.config.js
tsconfig.app.json
tsconfig.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/app/app.component.spec.ts">
 1: import { TestBed } from '@angular/core/testing';
 2: import { provideRouter } from '@angular/router';
 3: import { provideLocationMocks } from '@angular/common/testing';
 4: import { AppComponent } from './app.component';
 5: describe('AppComponent', () => {
 6:   beforeEach(async () => {
 7:     await TestBed.configureTestingModule({
 8:       imports: [AppComponent],
 9:       providers: [provideRouter([]), provideLocationMocks()],
10:     }).compileComponents();
11:   });
12:   it('should create the app', () => {
13:     const fixture = TestBed.createComponent(AppComponent);
14:     const app = fixture.componentInstance;
15:     expect(app).toBeTruthy();
16:   });
17: });
</file>

<file path="src/app/app.config.server.ts">
1: import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';
2: import { provideServerRendering } from '@angular/platform-server';
3: import { appConfig } from './app.config';
4: const serverConfig: ApplicationConfig = {
5:   providers: [provideServerRendering()],
6: };
7: export const config = mergeApplicationConfig(appConfig, serverConfig);
</file>

<file path="src/app/app.config.ts">
 1: import {
 2:   provideHttpClient,
 3:   withFetch,
 4:   withInterceptors,
 5: } from '@angular/common/http';
 6: import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
 7: import { provideClientHydration } from '@angular/platform-browser';
 8: import { provideFileRouter, requestContextInterceptor } from '@analogjs/router';
 9: export const appConfig: ApplicationConfig = {
10:   providers: [
11:     provideZoneChangeDetection({ eventCoalescing: true }),
12:     provideFileRouter(),
13:     provideHttpClient(
14:       withFetch(),
15:       withInterceptors([requestContextInterceptor])
16:     ),
17:     provideClientHydration(),
18:   ],
19: };
</file>

<file path="src/app/app.routes.ts">
 1: import { Routes } from '@angular/router';
 2: import { LayoutComponent } from './components/layout.component';
 3: export const routes: Routes = [
 4:   {
 5:     path: '',
 6:     component: LayoutComponent,
 7:     children: [
 8:       {
 9:         path: '',
10:         loadComponent: () => import('./pages/index.page'),
11:       },
12:       {
13:         path: 'property/:id',
14:         loadComponent: () => import('./pages/property/[id].page'),
15:       }
16:     ]
17:   }
18: ];
</file>

<file path="src/app/services/property.service.ts">
 1: import { Injectable } from '@angular/core';
 2: import { HttpClient } from '@angular/common/http';
 3: import { Observable } from 'rxjs';
 4: import { Property } from '../models/property.model';
 5: @Injectable({
 6:   providedIn: 'root'
 7: })
 8: export class PropertyService {
 9:   constructor(private http: HttpClient) {}
10:   getProperties(): Observable<Property[]> {
11:     return this.http.get<Property[]>('/api/v1/properties');
12:   }
13:   getProperty(id: string): Observable<Property> {
14:     return this.http.get<Property>(`/api/v1/properties/${id}`);
15:   }
16: }
</file>

<file path="src/main.server.ts">
1: import 'zone.js/node';
2: import '@angular/platform-server/init';
3: import { render } from '@analogjs/router/server';
4: import { AppComponent } from './app/app.component';
5: import { config } from './app/app.config.server';
6: export default render(AppComponent, config);
</file>

<file path="src/main.ts">
1: import 'zone.js';
2: import { bootstrapApplication } from '@angular/platform-browser';
3: import { AppComponent } from './app/app.component';
4: import { appConfig } from './app/app.config';
5: bootstrapApplication(AppComponent, appConfig);
</file>

<file path="src/server/routes/api/v1/properties.get.ts">
1: import { defineEventHandler } from 'h3';
2: import fs from 'fs';
3: import path from 'path';
4: export default defineEventHandler(() => {
5:   const filePath = path.join(process.cwd(), 'src/server/data/properties.json');
6:   const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
7:   return data;
8: });
</file>

<file path="src/server/routes/api/v1/properties/[id].get.ts">
 1: import { defineEventHandler, getRouterParam, createError } from 'h3';
 2: import fs from 'fs';
 3: import path from 'path';
 4: export default defineEventHandler((event) => {
 5:   const id = getRouterParam(event, 'id');
 6:   const filePath = path.join(process.cwd(), 'src/server/data/properties.json');
 7:   const properties = JSON.parse(fs.readFileSync(filePath, 'utf8'));
 8:   const property = properties.find((p: { id: string }) => p.id === id);
 9:   if (!property) {
10:     throw createError({
11:       statusCode: 404,
12:       statusMessage: 'Property not found'
13:     });
14:   }
15:   return property;
16: });
</file>

<file path="src/server/routes/api/v1/rooms.get.ts">
1: import { defineEventHandler } from 'h3';
2: import fs from 'fs';
3: import path from 'path';
4: export default defineEventHandler(() => {
5:   const filePath = path.join(process.cwd(), 'src/server/data/rooms.json');
6:   const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
7:   return data;
8: });
</file>

<file path="src/server/routes/api/v1/rooms/[id].get.ts">
 1: import { defineEventHandler, getRouterParam, createError } from 'h3';
 2: import fs from 'fs';
 3: import path from 'path';
 4: export default defineEventHandler((event) => {
 5:   const id = getRouterParam(event, 'id');
 6:   const filePath = path.join(process.cwd(), 'src/server/data/rooms.json');
 7:   const rooms = JSON.parse(fs.readFileSync(filePath, 'utf8'));
 8:   const room = rooms.find((r: { id: string }) => r.id === id);
 9:   if (!room) {
10:     throw createError({
11:       statusCode: 404,
12:       statusMessage: 'Room not found'
13:     });
14:   }
15:   return room;
16: });
</file>

<file path="src/test-setup.ts">
 1: import '@analogjs/vitest-angular/setup-zone';
 2: import {
 3:   BrowserDynamicTestingModule,
 4:   platformBrowserDynamicTesting,
 5: } from '@angular/platform-browser-dynamic/testing';
 6: import { getTestBed } from '@angular/core/testing';
 7: getTestBed().initTestEnvironment(
 8:   BrowserDynamicTestingModule,
 9:   platformBrowserDynamicTesting()
10: );
</file>

<file path="src/vite-env.d.ts">
1: 
</file>

<file path="tailwind.config.js">
 1: module.exports = {
 2:   content: [
 3:     "./src/**/*.{html,ts}",
 4:   ],
 5:   theme: {
 6:     extend: {
 7:       colors: {
 8:         primary: '#74BA43',
 9:         success: '#42758F',
10:         warning: '#EB6209',
11:         'dark-background': '#3D3D3C',
12:         'light-background': '#F0F5FF',
13:         'dark-text': '#152542',
14:         'light-text': '#3E547C',
15:         'custom-0': '#54565a',
16:         'custom-1': '#f16022',
17:         'custom-2': '#42758f',
18:         'custom-3': '#f19b76',
19:         'custom-4': '#FFFFFF',
20:         'custom-5': '#91bd77',
21:         'custom-6': '#F8F8F8',
22:         'custom-7': '#777777',
23:       },
24:       fontFamily: {
25:         raleway: ['Raleway', 'sans-serif'],
26:         inter: ['Inter', 'sans-serif'],
27:       },
28:       boxShadow: {
29:         'sm': '0px 1px 3px rgba(0, 0, 0, 0.12)',
30:         'md': '0px 5px 20px -5px rgba(0, 0, 0, 0.15)',
31:         'lg': '0px 10px 25px -8px rgba(0, 0, 0, 0.25)',
32:         'xl': '0px 20px 40px -10px rgba(0, 0, 0, 0.25)',
33:       }
34:     },
35:   },
36:   plugins: [],
37: }
</file>

<file path="tsconfig.app.json">
 1: /* To learn more about this file see: https://angular.io/config/tsconfig. */
 2: {
 3:   "extends": "./tsconfig.json",
 4:   "compilerOptions": {
 5:     "outDir": "./out-tsc/app",
 6:     "types": []
 7:   },
 8:   "files": ["src/main.ts", "src/main.server.ts"],
 9:   "include": [
10:     "src/**/*.d.ts",
11:     "src/app/pages/**/*.page.ts",
12:     "src/server/middleware/**/*.ts"
13:   ]
14: }
</file>

<file path="tsconfig.json">
 1: /* To learn more about this file see: https://angular.io/config/tsconfig. */
 2: {
 3:   "compileOnSave": false,
 4:   "compilerOptions": {
 5:     "baseUrl": "./",
 6:     "outDir": "./dist/out-tsc",
 7:     "forceConsistentCasingInFileNames": true,
 8:     "strict": true,
 9:     "noImplicitOverride": true,
10:     "noPropertyAccessFromIndexSignature": true,
11:     "noImplicitReturns": true,
12:     "noFallthroughCasesInSwitch": true,
13:     "sourceMap": true,
14:     "declaration": false,
15:     "downlevelIteration": true,
16:     "experimentalDecorators": true,
17:     "moduleResolution": "bundler",
18:     "isolatedModules": true,
19:     "importHelpers": true,
20:     "target": "ES2022",
21:     "module": "ES2022",
22:     "lib": ["ES2022", "dom"],
23:     "useDefineForClassFields": false,
24:     "skipLibCheck": true
25:   },
26:   "angularCompilerOptions": {
27:     "enableI18nLegacyMessageIdFormat": false,
28:     "strictInjectionParameters": true,
29:     "strictInputAccessModifiers": true,
30:     "strictTemplates": true
31:   }
32: }
</file>

<file path="angular.json">
 1: {
 2:   "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
 3:   "version": 1,
 4:   "newProjectRoot": "projects",
 5:   "projects": {
 6:     "my-app": {
 7:       "projectType": "application",
 8:       "root": ".",
 9:       "sourceRoot": "src",
10:       "prefix": "app",
11:       "architect": {
12:         "build": {
13:           "builder": "@analogjs/platform:vite",
14:           "options": {
15:             "configFile": "vite.config.ts",
16:             "main": "src/main.ts",
17:             "outputPath": "dist/client",
18:             "tsConfig": "tsconfig.app.json"
19:           },
20:           "defaultConfiguration": "production",
21:           "configurations": {
22:             "development": {
23:               "mode": "development"
24:             },
25:             "production": {
26:               "sourcemap": false,
27:               "mode": "production"
28:             }
29:           }
30:         },
31:         "serve": {
32:           "builder": "@analogjs/platform:vite-dev-server",
33:           "defaultConfiguration": "development",
34:           "options": {
35:             "buildTarget": "my-app:build",
36:             "port": 5173
37:           },
38:           "configurations": {
39:             "development": {
40:               "buildTarget": "my-app:build:development",
41:               "hmr": true
42:             },
43:             "production": {
44:               "buildTarget": "my-app:build:production"
45:             }
46:           }
47:         },
48:         "test": {
49:           "builder": "@analogjs/vitest-angular:test"
50:         }
51:       }
52:     }
53:   },
54:   "cli": {
55:     "analytics": false
56:   }
57: }
</file>

<file path="src/app/app.component.ts">
 1: import { Component } from '@angular/core';
 2: import { LayoutComponent } from './components/layout.component';
 3: @Component({
 4:   selector: 'app-root',
 5:   standalone: true,
 6:   imports: [LayoutComponent],
 7:   template: `<app-layout></app-layout>`,
 8:   styles: `
 9:     :host {
10:       max-width: 1280px;
11:       margin: 0 auto;
12:       text-align: center;
13:     }
14:   `,
15: })
16: export class AppComponent {}
</file>

<file path="src/app/components/property-card.component.ts">
 1: import { Component, Input } from '@angular/core';
 2: import { RouterLink } from '@angular/router';
 3: import { Property } from '../models/property.model';
 4: import { CommonModule, NgClass } from '@angular/common';
 5: @Component({
 6:   selector: 'app-property-card',
 7:   standalone: true,
 8:   imports: [RouterLink, CommonModule, NgClass],
 9:   template: `
10:     <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 mb-6">
11:       <div class="flex flex-col md:flex-row">
12:         <!-- Property Image -->
13:         <div class="md:w-2/5 h-64 md:h-auto relative">
14:           <img [src]="property.thumbnail" [alt]="property.title" class="w-full h-full object-cover">
15:           <div class="absolute top-4 right-4 bg-primary text-white px-2 py-1 rounded text-sm font-medium">
16:             For Sale
17:           </div>
18:         </div>
19:         <!-- Property Details -->
20:         <div class="md:w-3/5 p-6 flex flex-col justify-between">
21:           <div>
22:             <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-4">
23:               <div>
24:                 <h3 class="text-xl font-medium text-dark-text mb-1">{{ property.title }}</h3>
25:                 <p class="text-light-text mb-2">{{ property.address }}</p>
26:               </div>
27:               <p class="text-primary font-medium text-xl md:text-right">{{ property.price }}</p>
28:             </div>
29:             <p class="text-light-text mb-4 line-clamp-3">
30:               {{ property.description }}
31:             </p>
32:           </div>
33:           <!-- Property Stats and CTA -->
34:           <div class="mt-auto">
35:             <div class="flex justify-between text-light-text text-sm mb-4">
36:               <div class="flex items-center">
37:                 <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
38:                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
39:                 </svg>
40:                 <span>{{ property.stats.bedrooms }} Bed{{ property.stats.bedrooms !== 1 ? 's' : '' }}</span>
41:               </div>
42:               <div class="flex items-center">
43:                 <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
44:                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
45:                 </svg>
46:                 <span>{{ property.stats.bathrooms }} Bath{{ property.stats.bathrooms !== 1 ? 's' : '' }}</span>
47:               </div>
48:               <div class="flex items-center">
49:                 <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
50:                   <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4" />
51:                 </svg>
52:                 <span>{{ property.stats.area }}</span>
53:               </div>
54:             </div>
55:             <a [routerLink]="['/property', property.id]"
56:                class="text-white px-4 py-2 rounded-lg inline-flex items-center transition-opacity duration-300" [ngClass]="{'bg-primary hover:bg-primary/90': true}">
57:               <span>View Details</span>
58:               <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
59:                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
60:               </svg>
61:             </a>
62:           </div>
63:         </div>
64:       </div>
65:     </div>
66:   `
67: })
68: export class PropertyCardComponent {
69:   @Input() property!: Property;
70: }
</file>

<file path="src/app/components/property-stats.component.ts">
 1: import { Component, Input } from '@angular/core';
 2: import { CommonModule, NgClass } from '@angular/common';
 3: import { Property } from '../models/property.model';
 4: @Component({
 5:   selector: 'app-property-stats',
 6:   standalone: true,
 7:   imports: [CommonModule, NgClass],
 8:   template: `
 9:     <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
10:       <div class="bg-light-background rounded-lg p-5 text-center flex flex-col items-center">
11:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10': true}">
12:           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
13:             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
14:           </svg>
15:         </div>
16:         <h3 class="text-dark-text font-medium mb-1">Property Type</h3>
17:         <p class="text-light-text">{{ property.stats.type }}</p>
18:       </div>
19:       <div class="bg-light-background rounded-lg p-5 text-center flex flex-col items-center">
20:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10': true}">
21:           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
22:             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
23:           </svg>
24:         </div>
25:         <h3 class="text-dark-text font-medium mb-1">Bedrooms</h3>
26:         <p class="text-light-text">{{ property.stats.bedrooms }}</p>
27:       </div>
28:       <div class="bg-light-background rounded-lg p-5 text-center flex flex-col items-center">
29:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10': true}">
30:           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
31:             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
32:           </svg>
33:         </div>
34:         <h3 class="text-dark-text font-medium mb-1">Bathrooms</h3>
35:         <p class="text-light-text">{{ property.stats.bathrooms }}</p>
36:       </div>
37:       <div class="bg-light-background rounded-lg p-5 text-center flex flex-col items-center">
38:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10': true}">
39:           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
40:             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4" />
41:           </svg>
42:         </div>
43:         <h3 class="text-dark-text font-medium mb-1">Area</h3>
44:         <p class="text-light-text">{{ property.stats.area }}</p>
45:       </div>
46:     </div>
47:   `
48: })
49: export class PropertyStatsComponent {
50:   @Input() property!: Property;
51: }
</file>

<file path="src/app/components/room-details.component.ts">
  1: import { Component, Input, OnChanges, SimpleChanges, signal, inject, ChangeDetectorRef } from '@angular/core';
  2: import { CommonModule, NgClass } from '@angular/common';
  3: import { Room, RoomEnhanced } from '../models/room.model';
  4: import { RoomService } from '../services/room.service';
  5: @Component({
  6:   selector: 'app-room-details',
  7:   standalone: true,
  8:   imports: [CommonModule, NgClass],
  9:   template: `
 10:     <!-- Loading State -->
 11:     <div *ngIf="loading()" class="flex justify-center items-center py-16">
 12:       <div class="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-primary"></div>
 13:     </div>
 14:     <!-- Room Details Content -->
 15:     <div *ngIf="!loading() && room()" class="w-full">
 16:       <h3 class="text-xl font-medium text-dark-text mb-4 flex items-center">
 17:         {{ room()?.name }}
 18:       </h3>
 19:       <p class="text-light-text mb-6 leading-relaxed text-left">{{ room()?.description }}</p>
 20:       <!-- Room Photos with Progressive Loading -->
 21:       <div class="mb-8">
 22:         <h4 class="text-lg font-medium text-dark-text mb-3">Room Photos</h4>
 23:         <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
 24:           <div *ngFor="let photo of roomPhotos()" class="bg-gray-100 rounded-lg overflow-hidden h-56 relative">
 25:             <!-- Low-res background image (loads instantly) -->
 26:             <img
 27:               *ngIf="photo.lowRes"
 28:               [src]="photo.lowRes"
 29:               [alt]="room()?.name"
 30:               class="w-full h-full object-cover absolute inset-0 transition-opacity duration-300"
 31:               [class.opacity-0]="photo.highResLoaded"
 32:             >
 33:             <!-- High-res image (lazy loaded) -->
 34:             <img
 35:               *ngIf="photo.highRes"
 36:               [src]="photo.highRes"
 37:               [alt]="room()?.name"
 38:               class="w-full h-full object-cover absolute inset-0 transition-opacity duration-500"
 39:               [class.opacity-100]="photo.highResLoaded"
 40:               [class.opacity-0]="!photo.highResLoaded"
 41:               (load)="onHighResImageLoaded(photo)"
 42:               loading="lazy"
 43:             >
 44:           </div>
 45:         </div>
 46:       </div>
 47:       <!-- Room Features -->
 48:       <div *ngIf="room()?.features && room()?.features!.length > 0" class="bg-light-background rounded-lg p-6">
 49:         <h4 class="text-lg font-medium text-dark-text mb-4">Features</h4>
 50:         <ul class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-3">
 51:           <li *ngFor="let feature of room()?.features" class="flex text-left items-start">
 52:             <div class="flex-shrink-0 rounded-full p-1 mr-3" [ngClass]="{'bg-primary/10': true}">
 53:               <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 54:                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
 55:               </svg>
 56:             </div>
 57:             <span class="text-light-text">{{ feature }}</span>
 58:           </li>
 59:         </ul>
 60:       </div>
 61:     </div>
 62:     <!-- Empty/Not Selected State -->
 63:     <div *ngIf="!loading() && !room()" class="w-full text-center py-12 px-4 bg-light-background rounded-lg">
 64:       <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 65:         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7" />
 66:       </svg>
 67:       <p class="text-light-text">Select a room from the floorplan to view details</p>
 68:     </div>
 69:   `
 70: })
 71: export class RoomDetailsComponent implements OnChanges {
 72:   @Input() roomId: string = '';
 73:   room = signal<Room | null>(null);
 74:   loading = signal<boolean>(false);
 75:   roomPhotos = signal<{ highRes: string; lowRes: string; highResLoaded: boolean }[]>([]);
 76:   private roomService = inject(RoomService);
 77:   private cdr = inject(ChangeDetectorRef);
 78:   ngOnChanges(changes: SimpleChanges): void {
 79:     if (changes['roomId'] && this.roomId) {
 80:       this.loadRoomData(this.roomId);
 81:     }
 82:   }
 83:   private loadRoomData(id: string): void {
 84:     this.loading.set(true);
 85:     this.roomService.getRoom(id).subscribe({
 86:       next: (roomData) => {
 87:         this.room.set(roomData);
 88:         const photos = roomData.photos.map(photo => ({
 89:           highRes: photo,
 90:           lowRes: photo,
 91:           highResLoaded: false
 92:         }));
 93:         this.roomPhotos.set(photos);
 94:         this.loading.set(false);
 95:         this.cdr.detectChanges();
 96:       },
 97:       error: (error) => {
 98:         console.error('Error loading room data:', error);
 99:         this.room.set(null);
100:         this.loading.set(false);
101:       }
102:     });
103:   }
104:   onHighResImageLoaded(photo: { highRes: string; lowRes: string; highResLoaded: boolean }): void {
105:     photo.highResLoaded = true;
106:     this.cdr.detectChanges();
107:   }
108: }
</file>

<file path="src/app/models/property.model.ts">
 1: export interface Property {
 2:   id: string;
 3:   title: string;
 4:   address: string;
 5:   price: string;
 6:   description: string;
 7:   thumbnail: string;
 8:   stats: {
 9:     bedrooms: number;
10:     bathrooms: number;
11:     area: string;
12:     type: string;
13:   };
14:   floorplan: {
15:     image: string;
16:     orientation: 'horizontal' | 'vertical';
17:   };
18: }
19: export interface PropertyEnhanced {
20:   id: string;
21:   title: string;
22:   address: string;
23:   price: string;
24:   description: string;
25:   thumbnail: {
26:     lowRes: string;
27:     highRes: string;
28:   };
29:   stats: {
30:     bedrooms: number;
31:     bathrooms: number;
32:     area: string;
33:     type: string;
34:   };
35:   floorplan: {
36:     image: string;
37:     orientation: 'horizontal' | 'vertical';
38:   };
39: }
</file>

<file path="src/app/models/room.model.ts">
 1: export interface Room {
 2:   id: string;
 3:   propertyId: string;
 4:   name: string;
 5:   description: string;
 6:   features: string[];
 7:   photos: string[];
 8:   coordinates: {
 9:     x: number;
10:     y: number;
11:     width: number;
12:     height: number;
13:   };
14: }
15: export interface RoomEnhanced {
16:   id: string;
17:   propertyId: string;
18:   name: string;
19:   description: string;
20:   features: string[];
21:   photos: {
22:     lowRes: string;
23:     highRes: string;
24:   }[];
25:   coordinates: {
26:     x: number;
27:     y: number;
28:     width: number;
29:     height: number;
30:   };
31: }
</file>

<file path="src/app/pages/property/[id].page.ts">
  1: import { Component, OnInit, ChangeDetectorRef, signal } from '@angular/core';
  2: import { CommonModule, NgClass } from '@angular/common';
  3: import { ActivatedRoute, RouterLink } from '@angular/router';
  4: import { switchMap } from 'rxjs/operators';
  5: import { PropertyService } from '../../services/property.service';
  6: import { RoomService } from '../../services/room.service';
  7: import { Property } from '../../models/property.model';
  8: import { Room } from '../../models/room.model';
  9: import { PropertyStatsComponent } from '../../components/property-stats.component';
 10: import { FloorPlanComponent } from '../../components/floor-plan.component';
 11: import { RoomDetailsComponent } from '../../components/room-details.component';
 12: @Component({
 13:   selector: 'app-property-detail',
 14:   standalone: true,
 15:   imports: [
 16:     CommonModule,
 17:     NgClass,
 18:     PropertyStatsComponent,
 19:     FloorPlanComponent,
 20:     RoomDetailsComponent,
 21:     RouterLink
 22:   ],
 23:   template: `
 24:     <!-- Loading State -->
 25:     <div *ngIf="isLoading" class="flex justify-center items-center py-24">
 26:       <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary"></div>
 27:     </div>
 28:     <!-- Property Detail Content -->
 29:     <div *ngIf="!isLoading && property" class="bg-light-background pb-16">
 30:       <!-- Property Header -->
 31:       <div class="bg-white shadow-md py-8">
 32:         <div class="container mx-auto px-4">
 33:           <!-- Breadcrumbs -->
 34:           <div class="flex items-center text-sm mb-4">
 35:             <a routerLink="/" class="text-light-text hover:text-primary transition-colors">Home</a>
 36:             <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mx-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 37:               <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
 38:             </svg>
 39:             <span class="text-primary">{{ property.title }}</span>
 40:           </div>
 41:           <!-- Property Title & Price -->
 42:           <div class="text-center mb-4">
 43:             <h1 class="text-3xl md:text-4xl font-medium text-dark-text mb-2">{{ property.title }}</h1>
 44:             <p class="text-light-text text-lg">{{ property.address }}</p>
 45:             <p class="text-primary text-3xl md:text-4xl font-medium mt-4">{{ property.price }}</p>
 46:           </div>
 47:         </div>
 48:       </div>
 49:       <!-- Main Content -->
 50:       <div class="container mx-auto px-4 -mt-6">
 51:         <!-- Property Gallery -->
 52:         <div class="mb-8 bg-white rounded-lg shadow-md overflow-hidden">
 53:           <div class="h-64 sm:h-80 md:h-96 lg:h-112 bg-gray-200">
 54:             <img [src]="property.thumbnail" [alt]="property.title" class="w-full h-full object-cover">
 55:           </div>
 56:         </div>
 57:         <!-- Property Stats Card -->
 58:         <div class="bg-white rounded-lg shadow-md p-6 mb-8">
 59:           <h2 class="text-2xl font-medium text-dark-text mb-6">Property Overview</h2>
 60:           <app-property-stats [property]="property"></app-property-stats>
 61:           <!-- Property Description -->
 62:           <div class="mt-8">
 63:             <h3 class="text-xl font-medium text-dark-text mb-4">About this property</h3>
 64:             <p class="text-light-text leading-relaxed">{{ property.description }}</p>
 65:           </div>
 66:         </div>
 67:         <!-- Floorplan & Room Details Section -->
 68:         <div *ngIf="!isLoading && rooms.length > 0" class="flex flex-col lg:flex-row gap-8 mb-12">
 69:           <!-- Floorplan Column -->
 70:           <div class="w-full lg:w-1/2 bg-white rounded-lg shadow-md p-6">
 71:             <app-floor-plan
 72:               [rooms]="rooms"
 73:               [activeRoom]="selectedRoomId()"
 74:               [floorplanImage]="property.floorplan.image"
 75:               [orientation]="property.floorplan.orientation"
 76:               (roomSelected)="onRoomSelected($event)">
 77:             </app-floor-plan>
 78:           </div>
 79:           <!-- Room Details Column -->
 80:           <div class="w-full lg:w-1/2 bg-white rounded-lg shadow-md p-6">
 81:             <app-room-details [roomId]="selectedRoomId()"></app-room-details>
 82:           </div>
 83:         </div>
 84:         <!-- Contact/CTA Section -->
 85:         <div class="bg-white rounded-lg shadow-md p-8 text-center">
 86:           <h2 class="text-2xl font-medium text-dark-text mb-4">Interested in this property?</h2>
 87:           <p class="text-light-text max-w-2xl mx-auto mb-6">Schedule a viewing or get more information about this property by contacting our agents.</p>
 88:           <div class="flex flex-col sm:flex-row justify-center gap-4">
 89:             <button class="text-white px-6 py-3 rounded-lg flex items-center justify-center transition-opacity" [ngClass]="{'bg-primary hover:bg-primary/90': true}">
 90:               <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 91:                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
 92:               </svg>
 93:               Contact Agent
 94:             </button>
 95:             <button class="border border-primary text-white px-6 py-3 rounded-lg flex items-center justify-center hover:bg-primary hover:text-white transition-colors">
 96:               <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 97:                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
 98:               </svg>
 99:               Schedule Viewing
100:             </button>
101:           </div>
102:         </div>
103:       </div>
104:     </div>
105:     <!-- Error State -->
106:     <div *ngIf="!isLoading && !property" class="container mx-auto px-4 py-24 text-center">
107:       <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-300 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
108:         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
109:       </svg>
110:       <h2 class="text-2xl font-medium text-dark-text mb-4">Property Not Found</h2>
111:       <p class="text-light-text mb-8">The property you're looking for doesn't exist or has been removed.</p>
112:       <a routerLink="/" class="text-white px-6 py-3 rounded-lg inline-flex items-center transition-opacity" [ngClass]="{'bg-primary hover:bg-primary/90': true}">
113:         <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
114:           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
115:         </svg>
116:         Back to Home
117:       </a>
118:     </div>
119:   `
120: })
121: export default class PropertyDetailPage implements OnInit {
122:   property?: Property;
123:   rooms: Room[] = [];
124:   selectedRoomId = signal('');
125:   isLoading: boolean = true;
126:   constructor(
127:     private route: ActivatedRoute,
128:     private propertyService: PropertyService,
129:     private roomService: RoomService,
130:     private cdr: ChangeDetectorRef
131:   ) {}
132:   ngOnInit(): void {
133:     this.loadPropertyData();
134:   }
135:   loadPropertyData(): void {
136:     this.isLoading = true;
137:     this.route.paramMap.pipe(
138:       switchMap(params => {
139:         const id = params.get('id') ?? '';
140:         return this.propertyService.getProperty(id);
141:       })
142:     ).subscribe({
143:       next: (property) => {
144:         this.property = property;
145:         // Once we have the property, load the rooms
146:         this.roomService.getRoomsByPropertyId(property.id).subscribe({
147:           next: (rooms) => {
148:             this.rooms = rooms;
149:             if (rooms.length > 0) {
150:               // Set the signal value
151:               this.selectedRoomId.set(rooms[0].id);
152:             }
153:             this.isLoading = false;
154:             // Ensure proper change detection
155:             this.cdr.detectChanges();
156:           },
157:           error: (error) => {
158:             console.error('Error loading rooms data:', error);
159:             this.isLoading = false;
160:           }
161:         });
162:       },
163:       error: (error) => {
164:         console.error('Error loading property data:', error);
165:         this.isLoading = false;
166:       }
167:     });
168:   }
169:   onRoomSelected(roomId: string): void {
170:     this.selectedRoomId.set(roomId);
171:     this.cdr.detectChanges();
172:   }
173: }
</file>

<file path="src/app/services/room.service.ts">
 1: import { Injectable } from '@angular/core';
 2: import { HttpClient } from '@angular/common/http';
 3: import { Observable, map } from 'rxjs';
 4: import { Room } from '../models/room.model';
 5: @Injectable({
 6:   providedIn: 'root'
 7: })
 8: export class RoomService {
 9:   constructor(private http: HttpClient) {}
10:   getRooms(): Observable<Room[]> {
11:     return this.http.get<Room[]>('/api/v1/rooms');
12:   }
13:   getRoomsByPropertyId(propertyId: string): Observable<Room[]> {
14:     return this.http.get<Room[]>('/api/v1/rooms').pipe(
15:       map(rooms => rooms.filter(room => room.propertyId === propertyId))
16:     );
17:   }
18:   getRoom(id: string): Observable<Room> {
19:     return this.http.get<Room>(`/api/v1/rooms/${id}`);
20:   }
21: }
</file>

<file path="src/server/data/properties.json">
 1: [
 2:   {
 3:     "id": "property-1",
 4:     "title": "Elegant Urban Retreat",
 5:     "address": "123 Downtown Avenue, Cityville",
 6:     "price": "$425,000",
 7:     "description": "This upmarket one-bedroom apartment offers a perfect blend of modern convenience and classical charm. Featuring a modern kitchen and bathroom with a rustic feel in the bedroom and living room. The private balcony provides an ideal outdoor space for relaxation with stunning city views. Walking distance to premium restaurants and shopping.",
 8:     "thumbnail": "/assets/images/property-1/thumbnail.jpg",
 9:     "stats": {
10:       "bedrooms": 1,
11:       "bathrooms": 1,
12:       "area": "750 sq ft",
13:       "type": "Apartment"
14:     },
15:     "floorplan": {
16:       "image": "/assets/images/property-1/floorplan.jpg",
17:       "orientation": "horizontal"
18:     }
19:   },
20:   {
21:     "id": "property-2",
22:     "title": "Modern Luxury Family Home",
23:     "address": "456 Serenity Lane, Greenpark",
24:     "price": "$895,000",
25:     "description": "This stunning three-bedroom apartment is designed for upscale modern living. The minimalist architecture combines with thoughtful design for a spacious and comfortable living experience. The open-plan kitchen flows seamlessly into the living room and connects to a private balcony. Residents enjoy access to beautifully landscaped community gardens and premium amenities.",
26:     "thumbnail": "/assets/images/property-2/thumbnail.jpg",
27:     "stats": {
28:       "bedrooms": 3,
29:       "bathrooms": 2,
30:       "area": "1,450 sq ft",
31:       "type": "Apartment"
32:     },
33:     "floorplan": {
34:       "image": "/assets/images/property-2/floorplan.jpg",
35:       "orientation": "vertical"
36:     }
37:   }
38: ]
</file>

<file path="src/app/components/layout.component.ts">
  1: import { Component } from '@angular/core';
  2: import { RouterOutlet, RouterLink, RouterLinkActive } from '@angular/router';
  3: import { CommonModule } from '@angular/common';
  4: @Component({
  5:   selector: 'app-layout',
  6:   standalone: true,
  7:   imports: [RouterOutlet, RouterLink, RouterLinkActive, CommonModule],
  8:   template: `
  9:     <!-- Header -->
 10:     <header class="bg-white shadow-sm sticky top-0 z-50">
 11:       <div
 12:         class="container mx-auto px-4 py-3 flex justify-between items-center"
 13:       >
 14:         <a routerLink="/" class="flex flex-row justify-start items-start">
 15:           <svg
 16:             width="150"
 17:             height="42"
 18:             viewBox="0 0 698 192"
 19:             xmlns="http://www.w3.org/2000/svg"
 20:           >
 21:             <g
 22:               transform="matrix(1.333333, 0, 0, -1.333333, -53.881176, 793.701355)"
 23:             >
 24:               <g transform="matrix(1, 0, 0, 1, 0, 227.155548)">
 25:                 <g>
 26:                   <path
 27:                     d="m 0,0 c -24.707,2.223 -44.073,22.975 -44.073,48.26 0,26.768 21.7,48.468 48.468,48.468 25.286,0 46.039,-19.366 48.26,-44.073 h 14.637 c -2.258,32.778 -29.545,58.673 -62.897,58.673 -34.831,0 -63.067,-28.237 -63.067,-63.068 0,-33.352 25.895,-60.639 58.673,-62.897 z"
 28:                     style="fill:#444443;fill-opacity:1;fill-rule:nonzero;stroke:none"
 29:                     transform="translate(106.5829,249.2926)"
 30:                   />
 31:                   <path
 32:                     d="M 0,0 C -2.092,-23.259 -20.607,-41.774 -43.866,-43.866 V -58.503 C -12.541,-56.345 12.479,-31.325 14.637,0 Z"
 33:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 34:                     transform="translate(159.2381,293.1588)"
 35:                   />
 36:                   <path
 37:                     d="M 0,0 V 65.819 H 43.848 V 56.642 H 10.382 V 36.988 H 38.378 V 28.366 H 10.382 L 10.382,0 Z"
 38:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 39:                     transform="translate(210.5292,284.8434)"
 40:                   />
 41:                   <path
 42:                     d="m 0,0 h 18.17 c 1.482,0 2.828,0.324 4.033,0.972 1.205,0.65 2.238,1.545 3.105,2.69 0.865,1.143 1.544,2.456 2.039,3.939 0.494,1.484 0.742,3.059 0.742,4.729 0,1.668 -0.295,3.243 -0.881,4.727 -0.588,1.483 -1.359,2.78 -2.317,3.893 -0.958,1.112 -2.071,1.993 -3.337,2.643 -1.268,0.648 -2.582,0.973 -3.94,0.973 L 0,24.566 Z m -10.382,-32.075 v 65.819 h 28.645 c 2.966,0 5.7,-0.619 8.203,-1.855 2.504,-1.237 4.65,-2.859 6.443,-4.866 1.793,-2.009 3.198,-4.297 4.218,-6.86 1.02,-2.566 1.529,-5.178 1.529,-7.833 0,-2.226 -0.309,-4.358 -0.926,-6.397 C 37.112,3.893 36.246,2.007 35.134,0.278 34.021,-1.453 32.662,-2.953 31.056,-4.218 29.448,-5.486 27.687,-6.429 25.771,-7.046 L 41.253,-32.075 H 29.479 L 15.203,-9.179 H 0 v -22.896 z"
 43:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 44:                     transform="translate(288.4901,316.9186)"
 45:                   />
 46:                   <path
 47:                     d="M 0,0 V -9.177 H -45.146 V 56.642 H -0.835 V 47.465 H -34.764 V 28.739 H -5.377 V 20.117 H -34.764 V 0 Z"
 48:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 49:                     transform="translate(398.4354,294.0202)"
 50:                   />
 51:                   <path
 52:                     d="m 0,0 c -0.618,0.679 -1.515,1.405 -2.688,2.178 -1.173,0.772 -2.548,1.499 -4.125,2.179 -1.576,0.679 -3.307,1.236 -5.191,1.668 -1.887,0.432 -3.817,0.649 -5.795,0.649 -4.388,0 -7.617,-0.803 -9.686,-2.409 -2.073,-1.608 -3.106,-3.833 -3.106,-6.675 0,-1.608 0.323,-2.921 0.974,-3.941 0.649,-1.02 1.652,-1.916 3.013,-2.688 1.358,-0.773 3.058,-1.453 5.097,-2.039 2.04,-0.588 4.418,-1.221 7.14,-1.901 3.337,-0.804 6.348,-1.7 9.038,-2.688 2.687,-0.989 4.959,-2.194 6.813,-3.615 1.854,-1.423 3.291,-3.168 4.311,-5.238 1.018,-2.071 1.529,-4.589 1.529,-7.556 0,-3.337 -0.634,-6.21 -1.9,-8.62 -1.268,-2.412 -2.998,-4.374 -5.191,-5.887 -2.196,-1.516 -4.745,-2.628 -7.648,-3.338 -2.905,-0.709 -6.026,-1.066 -9.364,-1.066 -5.005,0 -9.842,0.756 -14.508,2.271 -4.666,1.513 -8.884,3.723 -12.653,6.629 l 4.727,8.899 c 0.802,-0.804 1.961,-1.701 3.477,-2.688 1.514,-0.989 3.275,-1.901 5.284,-2.736 2.007,-0.833 4.185,-1.544 6.535,-2.131 2.349,-0.589 4.79,-0.881 7.324,-0.881 4.078,0 7.231,0.71 9.455,2.133 2.226,1.421 3.338,3.523 3.338,6.303 0,1.669 -0.417,3.06 -1.252,4.172 -0.834,1.112 -2.025,2.086 -3.568,2.921 -1.546,0.833 -3.43,1.589 -5.655,2.271 -2.225,0.678 -4.76,1.39 -7.602,2.132 -3.277,0.864 -6.135,1.776 -8.575,2.734 -2.443,0.958 -4.466,2.117 -6.071,3.476 -1.609,1.359 -2.829,2.95 -3.664,4.774 -0.833,1.822 -1.251,4.033 -1.251,6.628 0,3.213 0.618,6.073 1.855,8.576 1.235,2.503 2.921,4.603 5.053,6.304 2.131,1.699 4.648,2.981 7.553,3.846 2.906,0.865 6.057,1.298 9.457,1.298 4.45,0 8.559,-0.711 12.33,-2.132 3.767,-1.422 7.076,-3.183 9.919,-5.285 z"
 53:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 54:                     transform="translate(460.6376,335.1808)"
 55:                   />
 56:                   <path
 57:                     d="m 0,0 v -65.819 h -10.477 v 29.016 H -43.663 V -65.819 H -54.045 V 0 h 10.382 v -27.533 h 33.186 V 0 Z"
 58:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 59:                     transform="translate(546.2958,350.6623)"
 60:                   />
 61:                 </g>
 62:               </g>
 63:             </g>
 64:           </svg>
 65:           <span class="ml-2 text-xl font-medium text-dark-text">Spaces</span>
 66:         </a>
 67:         <nav class="hidden md:flex items-center">
 68:           <ul class="flex space-x-8">
 69:             <li>
 70:               <a
 71:                 routerLink="/"
 72:                 routerLinkActive="text-primary font-medium"
 73:                 [routerLinkActiveOptions]="{ exact: true }"
 74:                 class="text-light-text hover:text-primary transition-colors duration-200"
 75:               >
 76:                 Home
 77:               </a>
 78:             </li>
 79:             <li>
 80:               <a
 81:                 routerLink="/"
 82:                 class="text-light-text hover:text-primary transition-colors duration-200"
 83:               >
 84:                 Listings
 85:               </a>
 86:             </li>
 87:             <li>
 88:               <a
 89:                 href="#"
 90:                 class="text-light-text hover:text-primary transition-colors duration-200"
 91:               >
 92:                 Contact
 93:               </a>
 94:             </li>
 95:           </ul>
 96:          <!-- <div class="ml-8 space-x-4">
 97:             <button
 98:               class="px-4 py-2 border border-primary text-white rounded-md hover:bg-primary hover:text-white transition-colors duration-200"
 99:             >
100:               Sign In
101:             </button>
102:             <button
103:               class="px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90 transition-opacity duration-200"
104:             >
105:               Get Started
106:             </button>
107:           </div> -->
108:         </nav>
109:         <!-- Mobile menu button -->
110:         <button class="md:hidden flex items-center">
111:           <svg
112:             xmlns="http://www.w3.org/2000/svg"
113:             class="h-6 w-6 text-white"
114:             fill="none"
115:             viewBox="0 0 24 24"
116:             stroke="currentColor"
117:           >
118:             <path
119:               stroke-linecap="round"
120:               stroke-linejoin="round"
121:               stroke-width="2"
122:               d="M4 6h16M4 12h16M4 18h16"
123:             />
124:           </svg>
125:         </button>
126:       </div>
127:     </header>
128:     <main class="min-h-screen">
129:       <router-outlet></router-outlet>
130:     </main>
131:     <!-- Footer -->
132:     <footer class="bg-dark-background text-white py-8 mt-12">
133:       <div class="container mx-auto px-4">
134:         <div class="flex flex-col md:flex-row justify-between items-center">
135:           <div class="flex flex-col justify-start items-start mb-4 md:mb-0">
136:             <a href="/" class="flex items-center">
137:               <span class="text-xl font-medium text-primary"
138:                 >Fresh Projects</span
139:               >
140:               <span class="ml-2 text-xl font-medium text-white">Spaces</span>
141:             </a>
142:             <span class="text-gray-200 mt-2">Find your perfect home</span>
143:           </div>
144:           <div
145:             class="flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-8"
146:           >
147:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
148:               >About Us</a
149:             >
150:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
151:               >Terms of Service</a
152:             >
153:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
154:               >Privacy Policy</a
155:             >
156:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
157:               >Contact</a
158:             >
159:           </div>
160:         </div>
161:         <div
162:           class="mt-8 pt-8 border-t border-gray-800 text-center md:text-right"
163:         >
164:           <span class="text-gray-400">
165:             &copy; 2025 Fresh Projects Spaces. All rights reserved.
166:           </span>
167:         </div>
168:       </div>
169:     </footer>
170:   `,
171: })
172: export class LayoutComponent {}
</file>

<file path="src/app/pages/index.page.ts">
 1: import { Component, OnInit } from '@angular/core';
 2: import { CommonModule, NgClass } from '@angular/common';
 3: import { PropertyCardComponent } from '../components/property-card.component';
 4: import { PropertyService } from '../services/property.service';
 5: import { Property } from '../models/property.model';
 6: @Component({
 7:   selector: 'app-home',
 8:   standalone: true,
 9:   imports: [CommonModule, NgClass, PropertyCardComponent],
10:   template: `
11:     <div class="bg-light-background py-16">
12:       <div class="container mx-auto px-4">
13:         <div class="text-center mb-12">
14:           <h1 class="text-4xl md:text-5xl font-medium text-dark-text mb-4">Fresh Projects Spaces</h1>
15:           <p class="text-light-text text-xl max-w-3xl mx-auto">Find your perfect home with our interactive property listings</p>
16:         </div>
17:         <!-- Search Box (Optional) -->
18:         <div class="max-w-4xl mx-auto mb-12">
19:           <div class="bg-white rounded-lg shadow-md p-4 flex items-center">
20:             <div class="relative flex-grow">
21:               <input
22:                 type="text"
23:                 placeholder="Search properties by location, features..."
24:                 class="w-full pl-10 pr-4 py-3 rounded-md border border-gray-200 focus:border-primary focus:ring-1 focus:ring-primary outline-none"
25:               >
26:               <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
27:                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
28:               </svg>
29:             </div>
30:             <button class="ml-4 text-white px-6 py-3 rounded-md transition-opacity duration-200" [ngClass]="{'bg-primary hover:bg-primary/90': true}">
31:               Search
32:             </button>
33:           </div>
34:         </div>
35:       </div>
36:     </div>
37:     <div class="container mx-auto px-4 py-12">
38:       <!-- Featured Properties Heading -->
39:       <div class="mb-8">
40:         <h2 class="text-3xl font-medium text-dark-text mb-2">Featured Properties</h2>
41:         <div class="w-20 h-1 bg-primary rounded-full"></div>
42:       </div>
43:       <!-- Loading State -->
44:       <div *ngIf="loading" class="flex justify-center items-center py-16">
45:         <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
46:       </div>
47:       <!-- No Properties State -->
48:       <div *ngIf="!loading && properties.length === 0" class="text-center py-16">
49:         <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-300 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
50:           <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
51:         </svg>
52:         <p class="text-light-text text-lg">No properties available at the moment.</p>
53:       </div>
54:       <!-- Properties List -->
55:       <div *ngIf="!loading && properties.length > 0">
56:         <app-property-card *ngFor="let property of properties" [property]="property"></app-property-card>
57:       </div>
58:     </div>
59:   `
60: })
61: export default class HomePage implements OnInit {
62:   properties: Property[] = [];
63:   loading: boolean = true;
64:   constructor(private propertyService: PropertyService) {}
65:   ngOnInit(): void {
66:     this.propertyService.getProperties().subscribe({
67:       next: (properties) => {
68:         this.properties = properties;
69:         this.loading = false;
70:       },
71:       error: (error) => {
72:         console.error('Error loading properties:', error);
73:         this.loading = false;
74:       }
75:     });
76:   }
77: }
</file>

<file path="src/styles.css">
  1: @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Raleway:wght@300;400;500;600&display=swap');
  2: @import 'tailwindcss';
  3: :root {
  4:   --color-primary: #74BA43;
  5:   --color-success: #42758F;
  6:   --color-warning: #EB6209;
  7:   --color-dark-background: #3D3D3C;
  8:   --color-light-background: #F0F5FF;
  9:   --color-dark-text: #152542;
 10:   --color-light-text: #3E547C;
 11:   --font-family-0: 'Raleway', sans-serif;
 12:   --font-family-1: 'Inter', sans-serif;
 13:   font-family: var(--font-family-1), Avenir, Helvetica, Arial, sans-serif;
 14:   font-size: 16px;
 15:   line-height: 24px;
 16:   font-weight: 400;
 17:   color: var(--color-dark-text);
 18:   background-color: #f8f9fa;
 19:   font-synthesis: none;
 20:   text-rendering: optimizeLegibility;
 21:   -webkit-font-smoothing: antialiased;
 22:   -moz-osx-font-smoothing: grayscale;
 23:   -webkit-text-size-adjust: 100%;
 24: }
 25: body {
 26:   margin: 0;
 27:   min-width: 320px;
 28:   min-height: 100vh;
 29: }
 30: h1, h2, h3, h4, h5, h6 {
 31:   font-family: var(--font-family-1);
 32:   color: var(--color-dark-text);
 33:   line-height: 1.3;
 34: }
 35: h1 {
 36:   font-size: 2.5rem;
 37:   font-weight: 500;
 38: }
 39: h2 {
 40:   font-size: 2rem;
 41:   font-weight: 400;
 42: }
 43: h3 {
 44:   font-size: 1.5rem;
 45:   font-weight: 400;
 46: }
 47: p {
 48:   color: var(--color-light-text);
 49:   line-height: 1.6;
 50: }
 51: a.primary {
 52:   font-weight: 500;
 53:   color: var(--color-primary);
 54:   text-decoration: inherit;
 55: }
 56: a:hover {
 57:   opacity: 0.9;
 58: }
 59: button {
 60:   border-radius: 8px;
 61:   border: 1px solid transparent;
 62:   padding: 0.6em 1.2em;
 63:   font-size: 1em;
 64:   font-weight: 500;
 65:   font-family: var(--font-family-1);
 66:   background-color: var(--color-primary);
 67:   color: white;
 68:   cursor: pointer;
 69:   transition: opacity 0.25s;
 70: }
 71: button:hover {
 72:   opacity: 0.9;
 73: }
 74: button:focus,
 75: button:focus-visible {
 76:   outline: 4px auto var(--color-primary);
 77: }
 78: .bg-primary {
 79:   background-color: var(--color-primary);
 80: }
 81: .text-primary {
 82:   color: var(--color-primary);
 83: }
 84: .border-primary {
 85:   border-color: var(--color-primary);
 86: }
 87: .bg-success {
 88:   background-color: var(--color-success);
 89: }
 90: .text-success {
 91:   color: var(--color-success);
 92: }
 93: .bg-warning {
 94:   background-color: var(--color-warning);
 95: }
 96: .text-warning {
 97:   color: var(--color-warning);
 98: }
 99: .bg-dark-background {
100:   background-color: var(--color-dark-background);
101: }
102: .text-dark-text {
103:   color: var(--color-dark-text);
104: }
105: .text-light-text {
106:   color: var(--color-light-text);
107: }
108: .bg-light-background {
109:   background-color: var(--color-light-background);
110: }
</file>

<file path="vite.config.ts">
 1: import { defineConfig } from 'vite';
 2: import analog from '@analogjs/platform';
 3: import tailwindcss from '@tailwindcss/vite';
 4: import devtoolsJson from 'vite-plugin-devtools-json';
 5: export default defineConfig(({ mode }) => ({
 6:   build: {
 7:     target: ['es2020'],
 8:   },
 9:   resolve: {
10:     mainFields: ['module'],
11:   },
12:   plugins: [
13:     devtoolsJson(),
14:     analog(),
15:     tailwindcss(),
16:   ],
17:   test: {
18:     globals: true,
19:     environment: 'jsdom',
20:     setupFiles: ['src/test-setup.ts'],
21:     include: ['**/*.spec.ts'],
22:     reporters: ['default'],
23:   },
24:   define: {
25:     'import.meta.vitest': mode !== 'production',
26:   },
27: }));
</file>

<file path="package.json">
 1: {
 2:   "name": "house-showcase",
 3:   "version": "0.0.0",
 4:   "type": "module",
 5:   "engines": {
 6:     "node": ">=18.19.1"
 7:   },
 8:   "scripts": {
 9:     "start": "npm run dev",
10:     "mix": "npx repomix",
11:     "ng": "ng",
12:     "dev": "ng serve",
13:     "build": "ng build",
14:     "watch": "ng build --watch --configuration development",
15:     "test": "ng test"
16:   },
17:   "private": true,
18:   "dependencies": {
19:     "@analogjs/content": "^1.16.1",
20:     "@analogjs/router": "^1.16.1",
21:     "@angular/animations": "^19.0.0",
22:     "@angular/common": "^19.0.0",
23:     "@angular/compiler": "^19.0.0",
24:     "@angular/core": "^19.0.0",
25:     "@angular/forms": "^19.0.0",
26:     "@angular/platform-browser": "^19.0.0",
27:     "@angular/platform-browser-dynamic": "^19.0.0",
28:     "@angular/platform-server": "^19.0.0",
29:     "@angular/router": "^19.0.0",
30:     "front-matter": "^4.0.2",
31:     "marked": "^15.0.7",
32:     "marked-gfm-heading-id": "^4.1.1",
33:     "marked-highlight": "^2.2.1",
34:     "marked-mangle": "^1.1.10",
35:     "prismjs": "^1.29.0",
36:     "rxjs": "~7.8.0",
37:     "tslib": "^2.3.0",
38:     "zone.js": "~0.15.0"
39:   },
40:   "devDependencies": {
41:     "@analogjs/platform": "^1.16.1",
42:     "@analogjs/vite-plugin-angular": "^1.16.1",
43:     "@analogjs/vitest-angular": "^1.16.1",
44:     "@angular-devkit/build-angular": "^19.0.0",
45:     "@angular/build": "^19.0.0",
46:     "@angular/cli": "^19.0.0",
47:     "@angular/compiler-cli": "^19.0.0",
48:     "@tailwindcss/vite": "^4.1.7",
49:     "autoprefixer": "^10.4.21",
50:     "jsdom": "^22.0.0",
51:     "postcss": "^8.5.3",
52:     "sharp": "^0.33.5",
53:     "tailwindcss": "^4.1.7",
54:     "typescript": "~5.8.0",
55:     "vite": "^6.0.0",
56:     "vite-plugin-devtools-json": "^0.1.0",
57:     "vite-tsconfig-paths": "^4.2.0",
58:     "vitest": "^3.0.0"
59:   }
60: }
</file>

<file path="src/server/data/rooms.json">
  1: [
  2:   {
  3:     "id": "living-room-1",
  4:     "propertyId": "property-1",
  5:     "name": "Living Room",
  6:     "description": "Spacious living area with rustic charm, abundant natural light, and hardwood flooring. Perfect for entertaining or relaxing with family.",
  7:     "features": [
  8:       "Hardwood flooring",
  9:       "Large windows for natural light",
 10:       "Ceiling fan",
 11:       "Open layout",
 12:       "Recessed lighting"
 13:     ],
 14:     "photos": ["/assets/images/property-1/living-room.jpg"],
 15:     "coordinates": {
 16:       "x": 232,
 17:       "y": 285,
 18:       "width": 533,
 19:       "height": 298
 20:     }
 21:   },
 22:   {
 23:     "id": "bedroom-1",
 24:     "propertyId": "property-1",
 25:     "name": "Bedroom",
 26:     "description": "Cozy bedroom with ample space for a queen-sized bed and additional furniture. Includes built-in storage and access to the balcony.",
 27:     "features": [
 28:       "Built-in closet",
 29:       "Carpet flooring",
 30:       "Balcony access",
 31:       "En-suite bathroom",
 32:       "Blackout curtains"
 33:     ],
 34:     "photos": ["/assets/images/property-1/bedroom.jpg"],
 35:     "coordinates": {
 36:       "x": 230,
 37:       "y": 44,
 38:       "width": 416,
 39:       "height": 215
 40:     }
 41:   },
 42:   {
 43:     "id": "kitchen-1",
 44:     "propertyId": "property-1",
 45:     "name": "Kitchen",
 46:     "description": "Modern kitchen with high-end appliances, custom cabinetry, and quartz countertops. Efficiently designed for the home chef.",
 47:     "features": [
 48:       "Stainless steel appliances",
 49:       "Quartz countertops",
 50:       "Custom cabinetry",
 51:       "Tile backsplash",
 52:       "Under-cabinet lighting"
 53:     ],
 54:     "photos": ["/assets/images/property-1/kitchen.jpg"],
 55:     "coordinates": {
 56:       "x": 58,
 57:       "y": 396,
 58:       "width": 171,
 59:       "height": 184
 60:     }
 61:   },
 62:   {
 63:     "id": "bathroom-1",
 64:     "propertyId": "property-1",
 65:     "name": "Bathroom",
 66:     "description": "Elegant bathroom with modern fixtures, a spacious shower, and premium finishes. Combines functionality with style.",
 67:     "features": [
 68:       "Walk-in shower",
 69:       "Porcelain tile flooring",
 70:       "Floating vanity",
 71:       "LED mirror",
 72:       "Heated towel rack"
 73:     ],
 74:     "photos": ["/assets/images/property-1/bathroom.jpg"],
 75:     "coordinates": {
 76:       "x": 73,
 77:       "y": 36,
 78:       "width": 150,
 79:       "height": 230
 80:     }
 81:   },
 82:   {
 83:     "id": "balcony-1",
 84:     "propertyId": "property-1",
 85:     "name": "Balcony",
 86:     "description": "Private balcony offering urban views and outdoor space for relaxation or al fresco dining.",
 87:     "features": [
 88:       "Private outdoor space",
 89:       "Urban views",
 90:       "Weather-resistant flooring",
 91:       "Space for furniture",
 92:       "Exterior lighting"
 93:     ],
 94:     "photos": ["/assets/images/property-1/balcony.jpg"],
 95:     "coordinates": {
 96:       "x": 670,
 97:       "y": 36,
 98:       "width": 116,
 99:       "height": 230
100:     }
101:   },
102:   {
103:     "id": "living-room-2",
104:     "propertyId": "property-2",
105:     "name": "Living Room",
106:     "description": "Contemporary open-concept living area seamlessly flowing into the kitchen and balcony. Featuring minimalist design and premium finishes.",
107:     "features": [
108:       "Open-concept layout",
109:       "Floor-to-ceiling windows",
110:       "Engineered hardwood flooring",
111:       "Recessed lighting",
112:       "Smart home integration"
113:     ],
114:     "photos": ["/assets/images/property-2/living-room.jpg"],
115:     "coordinates": {
116:       "x": 111,
117:       "y": 670,
118:       "width": 300,
119:       "height": 333
120:     }
121:   },
122:   {
123:     "id": "kitchen-2",
124:     "propertyId": "property-2",
125:     "name": "Kitchen",
126:     "description": "Designer kitchen with top-of-the-line appliances, custom cabinetry, and waterfall island. Perfect for gourmet cooking and entertaining.",
127:     "features": [
128:       "Premium appliance package",
129:       "Quartz countertops",
130:       "Custom cabinetry",
131:       "Island with seating",
132:       "Designer lighting fixtures"
133:     ],
134:     "photos": ["/assets/images/property-2/kitchen.jpg"],
135:     "coordinates": {
136:       "x": 112,
137:       "y": 328,
138:       "width": 195,
139:       "height": 385
140:     }
141:   },
142:   {
143:     "id": "master-bedroom-2",
144:     "propertyId": "property-2",
145:     "name": "Master Bedroom",
146:     "description": "Spacious master suite with en-suite bathroom, walk-in closet, and premium finishes throughout. A private sanctuary for relaxation.",
147:     "features": [
148:       "Walk-in closet",
149:       "En-suite bathroom",
150:       "Luxury carpet flooring",
151:       "Accent lighting",
152:       "Blackout window treatments"
153:     ],
154:     "photos": ["/assets/images/property-2/master-bedroom.jpg"],
155:     "coordinates": {
156:       "x": 324,
157:       "y": 28,
158:       "width": 373,
159:       "height": 345
160:     }
161:   },
162:   {
163:     "id": "bedroom-2-2",
164:     "propertyId": "property-2",
165:     "name": "Bedroom 2",
166:     "description": "Comfortable second bedroom with ample space for a queen bed and additional furniture. Features large windows for abundant natural light.",
167:     "features": [
168:       "Spacious layout",
169:       "Built-in storage",
170:       "Large windows",
171:       "Neutral color palette",
172:       "Plush carpeting"
173:     ],
174:     "photos": ["/assets/images/property-2/bedroom-2.jpg"],
175:     "coordinates": {
176:       "x": 400,
177:       "y": 340,
178:       "width": 300,
179:       "height": 270
180:     }
181:   },
182:   {
183:     "id": "bedroom-3-2",
184:     "propertyId": "property-2",
185:     "name": "Bedroom 3",
186:     "description": "Versatile third bedroom ideal for a child's room, home office, or guest accommodation. Features custom built-ins and garden views.",
187:     "features": [
188:       "Built-in desk",
189:       "Custom closet system",
190:       "Garden views",
191:       "Natural light",
192:       "Durable flooring"
193:     ],
194:     "photos": ["/assets/images/property-2/bedroom-3.jpg"],
195:     "coordinates": {
196:       "x": 424,
197:       "y": 720,
198:       "width": 269,
199:       "height": 334
200:     }
201:   },
202:   {
203:     "id": "master-bathroom-2",
204:     "propertyId": "property-2",
205:     "name": "Master Bathroom",
206:     "description": "Luxurious master bathroom with double vanity, soaking tub, and separate shower. Features high-end fixtures and premium materials.",
207:     "features": [
208:       "Double vanity",
209:       "Soaking tub",
210:       "Walk-in shower",
211:       "Heated floors",
212:       "Designer fixtures"
213:     ],
214:     "photos": ["/assets/images/property-2/master-bathroom.jpg"],
215:     "coordinates": {
216:       "x": 107,
217:       "y": 29,
218:       "width": 202,
219:       "height": 238
220:     }
221:   },
222:   {
223:     "id": "bathroom-2-2",
224:     "propertyId": "property-2",
225:     "name": "Bathroom 2",
226:     "description": "Stylish second bathroom with premium fixtures and finishes. Designed for both functionality and aesthetics.",
227:     "features": [
228:       "Floating vanity",
229:       "Glass shower enclosure",
230:       "Porcelain tile",
231:       "Modern fixtures",
232:       "Efficient storage"
233:     ],
234:     "photos": ["/assets/images/property-2/bathroom-2.jpg"],
235:     "coordinates": {
236:       "x": 518,
237:       "y": 580,
238:       "width": 177,
239:       "height": 138
240:     }
241:   },
242:   {
243:     "id": "balcony-2",
244:     "propertyId": "property-2",
245:     "name": "Balcony",
246:     "description": "Private balcony with ample space for outdoor furniture and potted plants. The perfect spot to enjoy morning coffee or evening relaxation.",
247:     "features": [
248:       "Private outdoor space",
249:       "Garden views",
250:       "Weather-resistant flooring",
251:       "Built-in planters",
252:       "Exterior lighting"
253:     ],
254:     "photos": ["/assets/images/property-2/balcony.jpg"],
255:     "coordinates": {
256:       "x": 104,
257:       "y": 958,
258:       "width": 302,
259:       "height": 92
260:     }
261:   }
262: ]
</file>

<file path="src/app/components/floor-plan.component.ts">
  1: import {
  2:   Component,
  3:   EventEmitter,
  4:   Input,
  5:   Output,
  6:   OnChanges,
  7:   SimpleChanges,
  8:   signal,
  9:   computed,
 10:   inject,
 11:   ChangeDetectorRef,
 12: } from '@angular/core';
 13: import { CommonModule, NgClass } from '@angular/common';
 14: import { Room } from '../models/room.model';
 15: @Component({
 16:   selector: 'app-floor-plan',
 17:   standalone: true,
 18:   imports: [CommonModule, NgClass],
 19:   template: `
 20:     <div class="w-full">
 21:       <h3 class="text-xl font-medium text-dark-text mb-4">
 22:         Interactive Floorplan
 23:       </h3>
 24:       <div class="mb-6 px-4 py-3 bg-light-background rounded-lg text-center">
 25:         <p class="text-sm text-light-text mb-0">
 26:           <svg
 27:             xmlns="http://www.w3.org/2000/svg"
 28:             class="h-4 w-4 inline-block mr-1 text-primary"
 29:             fill="none"
 30:             viewBox="0 0 24 24"
 31:             stroke="currentColor"
 32:           >
 33:             <path
 34:               stroke-linecap="round"
 35:               stroke-linejoin="round"
 36:               stroke-width="2"
 37:               d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
 38:             />
 39:           </svg>
 40:           Click on a room to view detailed information and photos
 41:         </p>
 42:       </div>
 43:       <div
 44:         [class.floorplan-horizontal]="orientation === 'horizontal'"
 45:         [class.floorplan-vertical]="orientation === 'vertical'"
 46:         class="floorplan-container w-full relative mx-auto rounded-lg overflow-hidden"
 47:       >
 48:         <!-- Floorplan Image -->
 49:         <img
 50:           [src]="floorplanImage"
 51:           alt="Floorplan"
 52:           class="w-full border border-gray-200 rounded-lg"
 53:         />
 54:         <!-- Clickable Room Areas with Integrated Labels -->
 55:         <div
 56:           *ngFor="let room of rooms"
 57:           [style.left.%]="getPercentPosition(room.coordinates.x, true)"
 58:           [style.top.%]="getPercentPosition(room.coordinates.y, false)"
 59:           [style.width.%]="getPercentSize(room.coordinates.width, true)"
 60:           [style.height.%]="getPercentSize(room.coordinates.height, false)"
 61:           [ngClass]="{
 62:             'bg-[#74BA43]/40': activeRoomSignal() === room.id,
 63:             'border-[#74BA43]': activeRoomSignal() === room.id,
 64:             'border-2': activeRoomSignal() === room.id,
 65:             'bg-[#74BA43]/10': activeRoomSignal() !== room.id,
 66:             'hover:bg-[#74BA43]/30': activeRoomSignal() !== room.id,
 67:             'hover:border-[#74BA43]': activeRoomSignal() !== room.id,
 68:             'border-[#74BA43]/30': activeRoomSignal() !== room.id,
 69:             'hover:border-2': activeRoomSignal() !== room.id
 70:           }"
 71:           class="absolute cursor-pointer group p-1 transition-all duration-200 border rounded-md  flex flex-col items-start justify-start z-10"
 72:           (click)="selectRoom(room.id)"
 73:         >
 74:           <!-- Integrated Room Label -->
 75:           <div
 76:             class="px-2 py-1 opacity-0 group-hover:opacity-100 bg-white rounded-full text-xs text-left flex-nowrap whitespace-nowrap font-medium shadow-sm select-none transition-colors duration-300 flex flex-row items-start justify-start"
 77:             [ngClass]="{  'opacity-100':activeRoomSignal() === room.id, }"
 78:           >
 79:             {{ room.name }}
 80:           </div>
 81:         </div>
 82:       </div>
 83:     </div>
 84:   `,
 85:   styles: [
 86:     `
 87:       .floorplan-container {
 88:         max-width: 800px;
 89:         margin: 0 auto;
 90:         box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
 91:           0 2px 4px -1px rgba(0, 0, 0, 0.06);
 92:       }
 93:       .floorplan-horizontal {
 94:         max-width: 800px;
 95:       }
 96:       .floorplan-vertical {
 97:         max-width: 500px;
 98:       }
 99:     `,
100:   ],
101: })
102: export class FloorPlanComponent implements OnChanges {
103:   @Input() rooms: Room[] = [];
104:   @Input() activeRoom: string = '';
105:   @Input() floorplanImage: string = '';
106:   @Input() orientation: 'horizontal' | 'vertical' = 'horizontal';
107:   @Output() roomSelected = new EventEmitter<string>();
108:   activeRoomSignal = signal('');
109:   // Reference dimensions of the original floorplan images
110:   referenceWidth = 800;
111:   referenceHeight = 624;
112:   cdr = inject(ChangeDetectorRef);
113:   ngOnChanges(changes: SimpleChanges): void {
114:     if (changes['orientation']) {
115:       this.referenceWidth = this.orientation === 'horizontal' ? 800 : 550;
116:       this.referenceHeight = this.orientation === 'horizontal' ? 624 : 800;
117:     }
118:     if (changes['activeRoom']) {
119:       this.activeRoomSignal.set(this.activeRoom);
120:     }
121:   }
122:   getPercentPosition(pixelValue: number, isHorizontal: boolean): number {
123:     const reference =
124:       this.orientation === 'horizontal'
125:         ? isHorizontal
126:           ? this.referenceWidth
127:           : this.referenceHeight
128:         : isHorizontal
129:         ? this.referenceWidth * 1.45
130:         : this.referenceHeight * 1.3;
131:     return (pixelValue / reference) * 100;
132:   }
133:   getPercentSize(pixelValue: number, isHorizontal: boolean): number {
134:     const reference =
135:       this.orientation === 'horizontal'
136:         ? isHorizontal
137:           ? this.referenceWidth
138:           : this.referenceHeight
139:         : isHorizontal
140:         ? this.referenceWidth * 1.45
141:         : this.referenceHeight * 1.5;
142:     return (pixelValue / reference) * 100;
143:   }
144:   selectRoom(roomId: string): void {
145:     this.activeRoomSignal.set(roomId);
146:     this.roomSelected.emit(roomId);
147:     this.cdr.detectChanges();
148:   }
149: }
</file>

</files>
