This file is a merged representation of a subset of the codebase, containing specifically included files and files not matching ignore patterns, combined into a single document by Repomix.
The content has been processed where comments have been removed, empty lines have been removed, line numbers have been added.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
- Pay special attention to the Repository Description. These contain important context and guidelines specific to this project.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Only files matching these patterns are included: package.json, angular.json, tsconfig.json, tsconfig.app.json, tailwind.config.js, vite.config.ts, src/**/*.{ts,tsx,css,json}
- Files matching these patterns are excluded: *.test.*, *.spec.*, coverage/**, dist/**, .env*, *.db, *.sqlite
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Code comments have been removed from supported file types
- Empty lines have been removed from all files
- Line numbers have been added to the beginning of each line
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<user_provided_header>
Fresh Project Home Showcase
</user_provided_header>

<directory_structure>
angular.json
package.json
src/app/app.component.spec.ts
src/app/app.component.ts
src/app/app.config.server.ts
src/app/app.config.ts
src/app/app.routes.ts
src/app/components/floor-plan.component.ts
src/app/components/layout.component.ts
src/app/components/property-card.component.ts
src/app/components/property-stats.component.ts
src/app/components/room-details.component.ts
src/app/models/property.model.ts
src/app/models/room.model.ts
src/app/pages/index.page.ts
src/app/pages/property/[id].page.ts
src/app/services/property.service.ts
src/app/services/room.service.ts
src/app/services/theme.service.ts
src/main.server.ts
src/main.ts
src/server/data/properties.json
src/server/data/rooms.json
src/server/routes/api/v1/properties.get.ts
src/server/routes/api/v1/properties/[id].get.ts
src/server/routes/api/v1/rooms.get.ts
src/server/routes/api/v1/rooms/[id].get.ts
src/styles.css
src/test-setup.ts
src/vite-env.d.ts
tailwind.config.js
tsconfig.app.json
tsconfig.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/app/app.component.spec.ts">
 1: import { TestBed } from '@angular/core/testing';
 2: import { provideRouter } from '@angular/router';
 3: import { provideLocationMocks } from '@angular/common/testing';
 4: import { AppComponent } from './app.component';
 5: describe('AppComponent', () => {
 6:   beforeEach(async () => {
 7:     await TestBed.configureTestingModule({
 8:       imports: [AppComponent],
 9:       providers: [provideRouter([]), provideLocationMocks()],
10:     }).compileComponents();
11:   });
12:   it('should create the app', () => {
13:     const fixture = TestBed.createComponent(AppComponent);
14:     const app = fixture.componentInstance;
15:     expect(app).toBeTruthy();
16:   });
17: });
</file>

<file path="src/app/app.config.server.ts">
1: import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';
2: import { provideServerRendering } from '@angular/platform-server';
3: import { appConfig } from './app.config';
4: const serverConfig: ApplicationConfig = {
5:   providers: [provideServerRendering()],
6: };
7: export const config = mergeApplicationConfig(appConfig, serverConfig);
</file>

<file path="src/app/app.routes.ts">
 1: import { Routes } from '@angular/router';
 2: import { LayoutComponent } from './components/layout.component';
 3: export const routes: Routes = [
 4:   {
 5:     path: '',
 6:     component: LayoutComponent,
 7:     children: [
 8:       {
 9:         path: '',
10:         loadComponent: () => import('./pages/index.page'),
11:       },
12:       {
13:         path: 'property/:id',
14:         loadComponent: () => import('./pages/property/[id].page'),
15:       }
16:     ]
17:   }
18: ];
</file>

<file path="src/app/services/property.service.ts">
 1: import { Injectable } from '@angular/core';
 2: import { HttpClient } from '@angular/common/http';
 3: import { Observable } from 'rxjs';
 4: import { Property } from '../models/property.model';
 5: @Injectable({
 6:   providedIn: 'root'
 7: })
 8: export class PropertyService {
 9:   constructor(private http: HttpClient) {}
10:   getProperties(): Observable<Property[]> {
11:     return this.http.get<Property[]>('/api/v1/properties');
12:   }
13:   getProperty(id: string): Observable<Property> {
14:     return this.http.get<Property>(`/api/v1/properties/${id}`);
15:   }
16: }
</file>

<file path="src/app/services/theme.service.ts">
 1: import { Injectable, inject, PLATFORM_ID, signal, effect } from '@angular/core';
 2: import { isPlatformBrowser } from '@angular/common';
 3: @Injectable({
 4:   providedIn: 'root'
 5: })
 6: export class ThemeService {
 7:   private platformId = inject(PLATFORM_ID);
 8:   private THEME_KEY = 'fresh-projects-theme';
 9:   private _darkMode = signal(false);
10:   private _useSystemPreference = signal(true);
11:   constructor() {
12:     this.initialize();
13:     effect(() => {
14:       this.applyTheme(this._darkMode());
15:     });
16:   }
17:   get darkMode() {
18:     return this._darkMode();
19:   }
20:   private initialize(): void {
21:     if (isPlatformBrowser(this.platformId)) {
22:       const storedTheme = localStorage.getItem(this.THEME_KEY);
23:       if (storedTheme) {
24:         this._useSystemPreference.set(false);
25:         this._darkMode.set(storedTheme === 'dark');
26:       } else {
27:         this._useSystemPreference.set(true);
28:         const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
29:         this._darkMode.set(prefersDark);
30:         window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
31:           if (this._useSystemPreference()) {
32:             this._darkMode.set(e.matches);
33:           }
34:         });
35:       }
36:       this.applyTheme(this._darkMode());
37:     }
38:   }
39:   toggleTheme(): void {
40:     this._useSystemPreference.set(false);
41:     this._darkMode.update(current => !current);
42:   }
43:   private applyTheme(isDark: boolean): void {
44:     if (isPlatformBrowser(this.platformId)) {
45:       if (!this._useSystemPreference()) {
46:         localStorage.setItem(this.THEME_KEY, isDark ? 'dark' : 'light');
47:       }
48:       if (isDark) {
49:         document.documentElement.classList.add('dark');
50:         document.documentElement.style.colorScheme = 'dark';
51:       } else {
52:         document.documentElement.classList.remove('dark');
53:         document.documentElement.style.colorScheme = 'light';
54:       }
55:     }
56:   }
57: }
</file>

<file path="src/main.server.ts">
1: import 'zone.js/node';
2: import '@angular/platform-server/init';
3: import { render } from '@analogjs/router/server';
4: import { AppComponent } from './app/app.component';
5: import { config } from './app/app.config.server';
6: export default render(AppComponent, config);
</file>

<file path="src/main.ts">
1: import 'zone.js';
2: import { bootstrapApplication } from '@angular/platform-browser';
3: import { AppComponent } from './app/app.component';
4: import { appConfig } from './app/app.config';
5: bootstrapApplication(AppComponent, appConfig);
</file>

<file path="src/server/routes/api/v1/properties.get.ts">
1: import { defineEventHandler } from 'h3';
2: import fs from 'fs';
3: import path from 'path';
4: export default defineEventHandler(() => {
5:   const filePath = path.join(process.cwd(), 'src/server/data/properties.json');
6:   const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
7:   return data;
8: });
</file>

<file path="src/server/routes/api/v1/properties/[id].get.ts">
 1: import { defineEventHandler, getRouterParam, createError } from 'h3';
 2: import fs from 'fs';
 3: import path from 'path';
 4: export default defineEventHandler((event) => {
 5:   const id = getRouterParam(event, 'id');
 6:   const filePath = path.join(process.cwd(), 'src/server/data/properties.json');
 7:   const properties = JSON.parse(fs.readFileSync(filePath, 'utf8'));
 8:   const property = properties.find((p: { id: string }) => p.id === id);
 9:   if (!property) {
10:     throw createError({
11:       statusCode: 404,
12:       statusMessage: 'Property not found'
13:     });
14:   }
15:   return property;
16: });
</file>

<file path="src/server/routes/api/v1/rooms.get.ts">
1: import { defineEventHandler } from 'h3';
2: import fs from 'fs';
3: import path from 'path';
4: export default defineEventHandler(() => {
5:   const filePath = path.join(process.cwd(), 'src/server/data/rooms.json');
6:   const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
7:   return data;
8: });
</file>

<file path="src/server/routes/api/v1/rooms/[id].get.ts">
 1: import { defineEventHandler, getRouterParam, createError } from 'h3';
 2: import fs from 'fs';
 3: import path from 'path';
 4: export default defineEventHandler((event) => {
 5:   const id = getRouterParam(event, 'id');
 6:   const filePath = path.join(process.cwd(), 'src/server/data/rooms.json');
 7:   const rooms = JSON.parse(fs.readFileSync(filePath, 'utf8'));
 8:   const room = rooms.find((r: { id: string }) => r.id === id);
 9:   if (!room) {
10:     throw createError({
11:       statusCode: 404,
12:       statusMessage: 'Room not found'
13:     });
14:   }
15:   return room;
16: });
</file>

<file path="src/test-setup.ts">
 1: import '@analogjs/vitest-angular/setup-zone';
 2: import {
 3:   BrowserDynamicTestingModule,
 4:   platformBrowserDynamicTesting,
 5: } from '@angular/platform-browser-dynamic/testing';
 6: import { getTestBed } from '@angular/core/testing';
 7: getTestBed().initTestEnvironment(
 8:   BrowserDynamicTestingModule,
 9:   platformBrowserDynamicTesting()
10: );
</file>

<file path="src/vite-env.d.ts">
1: 
</file>

<file path="tsconfig.app.json">
 1: /* To learn more about this file see: https://angular.io/config/tsconfig. */
 2: {
 3:   "extends": "./tsconfig.json",
 4:   "compilerOptions": {
 5:     "outDir": "./out-tsc/app",
 6:     "types": []
 7:   },
 8:   "files": ["src/main.ts", "src/main.server.ts"],
 9:   "include": [
10:     "src/**/*.d.ts",
11:     "src/app/pages/**/*.page.ts",
12:     "src/server/middleware/**/*.ts"
13:   ]
14: }
</file>

<file path="tsconfig.json">
 1: /* To learn more about this file see: https://angular.io/config/tsconfig. */
 2: {
 3:   "compileOnSave": false,
 4:   "compilerOptions": {
 5:     "baseUrl": "./",
 6:     "outDir": "./dist/out-tsc",
 7:     "forceConsistentCasingInFileNames": true,
 8:     "strict": true,
 9:     "noImplicitOverride": true,
10:     "noPropertyAccessFromIndexSignature": true,
11:     "noImplicitReturns": true,
12:     "noFallthroughCasesInSwitch": true,
13:     "sourceMap": true,
14:     "declaration": false,
15:     "downlevelIteration": true,
16:     "experimentalDecorators": true,
17:     "moduleResolution": "bundler",
18:     "isolatedModules": true,
19:     "importHelpers": true,
20:     "target": "ES2022",
21:     "module": "ES2022",
22:     "lib": ["ES2022", "dom"],
23:     "useDefineForClassFields": false,
24:     "skipLibCheck": true
25:   },
26:   "angularCompilerOptions": {
27:     "enableI18nLegacyMessageIdFormat": false,
28:     "strictInjectionParameters": true,
29:     "strictInputAccessModifiers": true,
30:     "strictTemplates": true
31:   }
32: }
</file>

<file path="angular.json">
 1: {
 2:   "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
 3:   "version": 1,
 4:   "newProjectRoot": "projects",
 5:   "projects": {
 6:     "my-app": {
 7:       "projectType": "application",
 8:       "root": ".",
 9:       "sourceRoot": "src",
10:       "prefix": "app",
11:       "architect": {
12:         "build": {
13:           "builder": "@analogjs/platform:vite",
14:           "options": {
15:             "configFile": "vite.config.ts",
16:             "main": "src/main.ts",
17:             "outputPath": "dist/client",
18:             "tsConfig": "tsconfig.app.json"
19:           },
20:           "defaultConfiguration": "production",
21:           "configurations": {
22:             "development": {
23:               "mode": "development"
24:             },
25:             "production": {
26:               "sourcemap": false,
27:               "mode": "production"
28:             }
29:           }
30:         },
31:         "serve": {
32:           "builder": "@analogjs/platform:vite-dev-server",
33:           "defaultConfiguration": "development",
34:           "options": {
35:             "buildTarget": "my-app:build",
36:             "port": 5173
37:           },
38:           "configurations": {
39:             "development": {
40:               "buildTarget": "my-app:build:development",
41:               "hmr": true
42:             },
43:             "production": {
44:               "buildTarget": "my-app:build:production"
45:             }
46:           }
47:         },
48:         "test": {
49:           "builder": "@analogjs/vitest-angular:test"
50:         }
51:       }
52:     }
53:   },
54:   "cli": {
55:     "analytics": false
56:   }
57: }
</file>

<file path="src/app/app.config.ts">
 1: import {
 2:   provideHttpClient,
 3:   withFetch,
 4:   withInterceptors,
 5: } from '@angular/common/http';
 6: import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
 7: import { provideClientHydration } from '@angular/platform-browser';
 8: import { provideFileRouter, requestContextInterceptor } from '@analogjs/router';
 9: import { provideIcons } from '@ng-icons/core';
10: import {
11:   tablerHome,
12:   tablerBed,
13:   tablerBath,
14:   tablerMaximize,
15:   tablerBuildingCommunity,
16:   tablerMapPin,
17:   tablerPhone,
18:   tablerCalendarEvent,
19:   tablerChevronRight,
20:   tablerChevronLeft,
21:   tablerSun,
22:   tablerMoon,
23:   tablerMenu2,
24:   tablerCheck,
25:   tablerSearch,
26:   tablerInfoCircle,
27:   tablerMoodSad,
28:   tablerAlertCircle
29: } from '@ng-icons/tabler-icons';
30: export const appConfig: ApplicationConfig = {
31:   providers: [
32:     provideZoneChangeDetection({ eventCoalescing: true }),
33:     provideFileRouter(),
34:     provideHttpClient(
35:       withFetch(),
36:       withInterceptors([requestContextInterceptor])
37:     ),
38:     provideClientHydration(),
39:     provideIcons({
40:       tablerHome,
41:       tablerBed,
42:       tablerBath,
43:       tablerMaximize,
44:       tablerBuildingCommunity,
45:       tablerMapPin,
46:       tablerPhone,
47:       tablerCalendarEvent,
48:       tablerChevronRight,
49:       tablerChevronLeft,
50:       tablerSun,
51:       tablerMoon,
52:       tablerMenu2,
53:       tablerCheck,
54:       tablerSearch,
55:       tablerInfoCircle,
56:       tablerMoodSad,
57:       tablerAlertCircle
58:     })
59:   ],
60: };
</file>

<file path="src/app/models/property.model.ts">
 1: export interface Property {
 2:   id: string;
 3:   title: string;
 4:   address: string;
 5:   price: string;
 6:   description: string;
 7:   thumbnail: string;
 8:   stats: {
 9:     bedrooms: number;
10:     bathrooms: number;
11:     area: string;
12:     type: string;
13:   };
14:   floorplan: {
15:     image: string;
16:     orientation: 'horizontal' | 'vertical';
17:   };
18: }
19: export interface PropertyEnhanced {
20:   id: string;
21:   title: string;
22:   address: string;
23:   price: string;
24:   description: string;
25:   thumbnail: {
26:     lowRes: string;
27:     highRes: string;
28:   };
29:   stats: {
30:     bedrooms: number;
31:     bathrooms: number;
32:     area: string;
33:     type: string;
34:   };
35:   floorplan: {
36:     image: string;
37:     orientation: 'horizontal' | 'vertical';
38:   };
39: }
</file>

<file path="src/app/models/room.model.ts">
 1: export interface Room {
 2:   id: string;
 3:   propertyId: string;
 4:   name: string;
 5:   description: string;
 6:   features: string[];
 7:   photos: string[];
 8:   coordinates: {
 9:     x: number;
10:     y: number;
11:     width: number;
12:     height: number;
13:   };
14: }
15: export interface RoomEnhanced {
16:   id: string;
17:   propertyId: string;
18:   name: string;
19:   description: string;
20:   features: string[];
21:   photos: {
22:     lowRes: string;
23:     highRes: string;
24:   }[];
25:   coordinates: {
26:     x: number;
27:     y: number;
28:     width: number;
29:     height: number;
30:   };
31: }
</file>

<file path="src/app/services/room.service.ts">
 1: import { Injectable } from '@angular/core';
 2: import { HttpClient } from '@angular/common/http';
 3: import { Observable, map } from 'rxjs';
 4: import { Room } from '../models/room.model';
 5: @Injectable({
 6:   providedIn: 'root'
 7: })
 8: export class RoomService {
 9:   constructor(private http: HttpClient) {}
10:   getRooms(): Observable<Room[]> {
11:     return this.http.get<Room[]>('/api/v1/rooms');
12:   }
13:   getRoomsByPropertyId(propertyId: string): Observable<Room[]> {
14:     return this.http.get<Room[]>('/api/v1/rooms').pipe(
15:       map(rooms => rooms.filter(room => room.propertyId === propertyId))
16:     );
17:   }
18:   getRoom(id: string): Observable<Room> {
19:     return this.http.get<Room>(`/api/v1/rooms/${id}`);
20:   }
21: }
</file>

<file path="src/server/data/properties.json">
 1: [
 2:   {
 3:     "id": "property-1",
 4:     "title": "Elegant Urban Retreat",
 5:     "address": "123 Downtown Avenue, Cityville",
 6:     "price": "$425,000",
 7:     "description": "This upmarket one-bedroom apartment offers a perfect blend of modern convenience and classical charm. Featuring a modern kitchen and bathroom with a rustic feel in the bedroom and living room. The private balcony provides an ideal outdoor space for relaxation with stunning city views. Walking distance to premium restaurants and shopping.",
 8:     "thumbnail": "/assets/images/property-1/thumbnail.jpg",
 9:     "stats": {
10:       "bedrooms": 1,
11:       "bathrooms": 1,
12:       "area": "750 sq ft",
13:       "type": "Apartment"
14:     },
15:     "floorplan": {
16:       "image": "/assets/images/property-1/floorplan.jpg",
17:       "orientation": "horizontal"
18:     }
19:   },
20:   {
21:     "id": "property-2",
22:     "title": "Modern Luxury Family Home",
23:     "address": "456 Serenity Lane, Greenpark",
24:     "price": "$895,000",
25:     "description": "This stunning three-bedroom apartment is designed for upscale modern living. The minimalist architecture combines with thoughtful design for a spacious and comfortable living experience. The open-plan kitchen flows seamlessly into the living room and connects to a private balcony. Residents enjoy access to beautifully landscaped community gardens and premium amenities.",
26:     "thumbnail": "/assets/images/property-2/thumbnail.jpg",
27:     "stats": {
28:       "bedrooms": 3,
29:       "bathrooms": 2,
30:       "area": "1,450 sq ft",
31:       "type": "Apartment"
32:     },
33:     "floorplan": {
34:       "image": "/assets/images/property-2/floorplan.jpg",
35:       "orientation": "vertical"
36:     }
37:   }
38: ]
</file>

<file path="tailwind.config.js">
 1: module.exports = {
 2:   content: [
 3:     "./src/**/*.{html,ts}",
 4:   ],
 5:   darkMode: 'class',
 6:   theme: {
 7:     extend: {
 8:       colors: {
 9:         primary: '#74BA43',
10:         success: '#42758F',
11:         warning: '#EB6209',
12:         'dark-background': '#3D3D3C',
13:         'light-background': '#F0F5FF',
14:         'dark-text': '#152542',
15:         'light-text': '#3E547C',
16:         'custom-0': '#54565a',
17:         'custom-1': '#f16022',
18:         'custom-2': '#42758f',
19:         'custom-3': '#f19b76',
20:         'custom-4': '#FFFFFF',
21:         'custom-5': '#91bd77',
22:         'custom-6': '#F8F8F8',
23:         'custom-7': '#777777',
24:       },
25:       fontFamily: {
26:         raleway: ['Raleway', 'sans-serif'],
27:         inter: ['Inter', 'sans-serif'],
28:       },
29:       boxShadow: {
30:         'sm': '0px 1px 3px rgba(0, 0, 0, 0.12)',
31:         'md': '0px 5px 20px -5px rgba(0, 0, 0, 0.15)',
32:         'lg': '0px 10px 25px -8px rgba(0, 0, 0, 0.25)',
33:         'xl': '0px 20px 40px -10px rgba(0, 0, 0, 0.25)',
34:       }
35:     },
36:   },
37:   corePlugins: {
38:     preflight: true,
39:     dark: true,
40:   },
41:   safelist: [
42:     'bg-white',
43:     'dark:bg-gray-900',
44:     'dark:bg-gray-800',
45:     'dark:bg-gray-700',
46:     'text-dark-text',
47:     'dark:text-white'
48:   ],
49:   plugins: [],
50: }
</file>

<file path="src/app/app.component.ts">
 1: import { Component, inject } from '@angular/core';
 2: import { LayoutComponent } from './components/layout.component';
 3: import { ThemeService } from './services/theme.service';
 4: @Component({
 5:   selector: 'app-root',
 6:   standalone: true,
 7:   imports: [LayoutComponent],
 8:   template: `
 9:     <app-layout></app-layout>
10:   `,
11:   styles: `
12:     :host {
13:       max-width: 1280px;
14:       margin: 0 auto;
15:       text-align: center;
16:     }
17:   `,
18: })
19: export class AppComponent {
20:   private themeService = inject(ThemeService);
21: }
</file>

<file path="src/app/components/property-card.component.ts">
  1: import { Component, Input } from '@angular/core';
  2: import { RouterLink } from '@angular/router';
  3: import { Property } from '../models/property.model';
  4: import { CommonModule, NgClass } from '@angular/common';
  5: import { NgIcon } from '@ng-icons/core';
  6: @Component({
  7:   selector: 'app-property-card',
  8:   standalone: true,
  9:   imports: [RouterLink, CommonModule, NgClass, NgIcon],
 10:   template: `
 11:     <div
 12:       class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 mb-6"
 13:     >
 14:       <div class="flex flex-col md:flex-row">
 15:         <!-- Property Image -->
 16:         <div class="md:w-2/5 h-64 md:h-auto relative">
 17:           <img
 18:             [src]="property.thumbnail"
 19:             [alt]="property.title"
 20:             class="w-full h-full object-cover"
 21:           />
 22:           <div
 23:             class="absolute top-4 right-4 bg-primary text-white px-2 py-1 rounded text-sm font-medium"
 24:           >
 25:             For Sale
 26:           </div>
 27:         </div>
 28:         <!-- Property Details -->
 29:         <div class="md:w-3/5 p-6 flex flex-col justify-between">
 30:           <div>
 31:             <div
 32:               class="flex flex-col md:flex-row md:justify-between md:items-start mb-4"
 33:             >
 34:               <div>
 35:                 <h3
 36:                   class="text-xl font-medium text-dark-text dark:text-white mb-1"
 37:                 >
 38:                   {{ property.title }}
 39:                 </h3>
 40:                 <p class="text-light-text dark:text-gray-300 mb-2">
 41:                   {{ property.address }}
 42:                 </p>
 43:               </div>
 44:               <p class="text-primary font-medium text-xl md:text-right">
 45:                 {{ property.price }}
 46:               </p>
 47:             </div>
 48:             <p
 49:               class="text-light-text dark:text-gray-300 mb-4 line-clamp-3 text-left"
 50:             >
 51:               {{ property.description }}
 52:             </p>
 53:           </div>
 54:           <!-- Property Stats and CTA -->
 55:           <div class="mt-auto">
 56:             <div
 57:               class="flex justify-between text-light-text dark:text-gray-300 text-sm mb-4"
 58:             >
 59:               <div class="flex items-center">
 60:                 <div
 61:                   class="flex items-center bg-primary/10 dark:bg-primary/20 rounded-full p-1 mr-2"
 62:                 >
 63:                   <ng-icon
 64:                     name="tablerBed"
 65:                     class="text-primary text-2xl sm:text-5xl"
 66:                   ></ng-icon>
 67:                 </div>
 68:                 <span class="text-base font-medium"
 69:                   >{{ property.stats.bedrooms }} Bed{{
 70:                     property.stats.bedrooms !== 1 ? 's' : ''
 71:                   }}</span
 72:                 >
 73:               </div>
 74:               <div class="flex items-center">
 75:                 <div
 76:                   class="flex items-center bg-primary/10 dark:bg-primary/20 rounded-full p-1 mr-2"
 77:                 >
 78:                   <ng-icon
 79:                     name="tablerBath"
 80:                     class="text-primary text-2xl sm:text-5xl"
 81:                   ></ng-icon>
 82:                 </div>
 83:                 <span class="text-base font-medium"
 84:                   >{{ property.stats.bathrooms }} Bath{{
 85:                     property.stats.bathrooms !== 1 ? 's' : ''
 86:                   }}</span
 87:                 >
 88:               </div>
 89:               <div class="flex items-center">
 90:                 <div
 91:                   class="flex items-center bg-primary/10 dark:bg-primary/20 rounded-full p-1 mr-2"
 92:                 >
 93:                   <ng-icon
 94:                     name="tablerMaximize"
 95:                     class="text-primary text-2xl sm:text-5xl"
 96:                   ></ng-icon>
 97:                 </div>
 98:                 <span class="text-base font-medium">{{
 99:                   property.stats.area
100:                 }}</span>
101:               </div>
102:             </div>
103:             <a
104:               [routerLink]="['/property', property.id]"
105:               class="text-white px-4 py-2 rounded-lg inline-flex items-center transition-opacity duration-300"
106:               [ngClass]="{
107:                 'bg-primary hover:bg-primary/90 dark:bg-primary/90 dark:hover:bg-primary': true
108:               }"
109:             >
110:               <span>View Details</span>
111:               <ng-icon name="tablerChevronRight" class="ml-2 text-xl"></ng-icon>
112:             </a>
113:           </div>
114:         </div>
115:       </div>
116:     </div>
117:   `,
118: })
119: export class PropertyCardComponent {
120:   @Input() property!: Property;
121: }
</file>

<file path="src/app/components/property-stats.component.ts">
 1: import { Component, Input } from '@angular/core';
 2: import { CommonModule, NgClass } from '@angular/common';
 3: import { Property } from '../models/property.model';
 4: import { NgIcon } from '@ng-icons/core';
 5: @Component({
 6:   selector: 'app-property-stats',
 7:   standalone: true,
 8:   imports: [CommonModule, NgClass, NgIcon],
 9:   template: `
10:     <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
11:       <div class="bg-light-background dark:bg-gray-700 rounded-lg p-5 text-center flex flex-col items-center">
12:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10 dark:bg-primary/20': true}">
13:           <ng-icon name="tablerBuildingCommunity" class="text-primary text-6xl"></ng-icon>
14:         </div>
15:         <h3 class="text-dark-text dark:text-white font-medium mb-1">Property Type</h3>
16:         <p class="text-light-text dark:text-gray-300 text-xl font-bold">{{ property.stats.type }}</p>
17:       </div>
18:       <div class="bg-light-background dark:bg-gray-700 rounded-lg p-5 text-center flex flex-col items-center">
19:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10 dark:bg-primary/20': true}">
20:           <ng-icon name="tablerBed" class="text-primary text-6xl"></ng-icon>
21:         </div>
22:         <h3 class="text-dark-text dark:text-white font-medium mb-1">Bedrooms</h3>
23:         <p class="text-light-text dark:text-gray-300 text-xl font-bold">{{ property.stats.bedrooms }}</p>
24:       </div>
25:       <div class="bg-light-background dark:bg-gray-700 rounded-lg p-5 text-center flex flex-col items-center">
26:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10 dark:bg-primary/20': true}">
27:           <ng-icon name="tablerBath" class="text-primary text-6xl"></ng-icon>
28:         </div>
29:         <h3 class="text-dark-text dark:text-white font-medium mb-1">Bathrooms</h3>
30:         <p class="text-light-text dark:text-gray-300 text-xl font-bold">{{ property.stats.bathrooms }}</p>
31:       </div>
32:       <div class="bg-light-background dark:bg-gray-700 rounded-lg p-5 text-center flex flex-col items-center">
33:         <div class="rounded-full p-3 mb-3" [ngClass]="{'bg-primary/10 dark:bg-primary/20': true}">
34:           <ng-icon name="tablerMaximize" class="text-primary text-6xl"></ng-icon>
35:         </div>
36:         <h3 class="text-dark-text dark:text-white font-medium mb-1">Area</h3>
37:         <p class="text-light-text dark:text-gray-300 text-xl font-bold">{{ property.stats.area }}</p>
38:       </div>
39:     </div>
40:   `
41: })
42: export class PropertyStatsComponent {
43:   @Input() property!: Property;
44: }
</file>

<file path="src/app/components/room-details.component.ts">
  1: import {
  2:   Component,
  3:   Input,
  4:   OnChanges,
  5:   SimpleChanges,
  6:   signal,
  7:   inject,
  8:   ChangeDetectorRef,
  9: } from '@angular/core';
 10: import { CommonModule } from '@angular/common';
 11: import { Room } from '../models/room.model';
 12: import { RoomService } from '../services/room.service';
 13: import { NgIcon } from '@ng-icons/core';
 14: @Component({
 15:   selector: 'app-room-details',
 16:   standalone: true,
 17:   imports: [CommonModule, NgIcon],
 18:   template: `
 19:     <!-- Loading State -->
 20:     <div *ngIf="loading()" class="flex justify-center items-center py-16">
 21:       <div
 22:         class="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-primary"
 23:       ></div>
 24:     </div>
 25:     <!-- Room Details Content -->
 26:     <div *ngIf="!loading() && room()" class="w-full">
 27:       <h3
 28:         class="text-xl font-medium text-dark-text dark:text-white mb-4 flex items-center"
 29:       >
 30:         {{ room()?.name }}
 31:       </h3>
 32:       <p
 33:         class="text-light-text dark:text-gray-300 mb-6 leading-relaxed text-left"
 34:       >
 35:         {{ room()?.description }}
 36:       </p>
 37:       <!-- Room Photos with Progressive Loading -->
 38:       <div class="mb-8">
 39:         <h4 class="text-lg font-medium text-dark-text dark:text-white mb-3">
 40:           Room Photos
 41:         </h4>
 42:         <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
 43:           <div
 44:             *ngFor="let photo of roomPhotos()"
 45:             class="bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden h-56 relative"
 46:           >
 47:             <!-- Low-res background image (loads instantly) -->
 48:             <img
 49:               *ngIf="photo.lowRes"
 50:               [src]="photo.lowRes"
 51:               [alt]="room()?.name"
 52:               class="w-full h-full object-cover absolute inset-0 transition-opacity duration-300"
 53:               [class.opacity-0]="photo.highResLoaded"
 54:             />
 55:             <!-- High-res image (lazy loaded) -->
 56:             <img
 57:               *ngIf="photo.highRes"
 58:               [src]="photo.highRes"
 59:               [alt]="room()?.name"
 60:               class="w-full h-full object-cover absolute inset-0 transition-opacity duration-500"
 61:               [class.opacity-100]="photo.highResLoaded"
 62:               [class.opacity-0]="!photo.highResLoaded"
 63:               (load)="onHighResImageLoaded(photo)"
 64:               loading="lazy"
 65:             />
 66:           </div>
 67:         </div>
 68:       </div>
 69:       <!-- Room Features -->
 70:       <div
 71:         *ngIf="room()?.features && (room()?.features)!.length > 0"
 72:         class="bg-light-background dark:bg-gray-700 rounded-lg p-6"
 73:       >
 74:         <h4 class="text-lg font-medium text-dark-text dark:text-white mb-4">
 75:           Features
 76:         </h4>
 77:         <ul class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-3">
 78:           <li
 79:             *ngFor="let feature of room()?.features"
 80:             class="flex text-left items-center"
 81:           >
 82:             <div
 83:               class="flex-shrink-0 rounded-full p-2 mr-3 bg-primary/10 dark:bg-primary/20"
 84:             >
 85:               <ng-icon
 86:                 name="tablerCheck"
 87:                 class="text-primary  text-2xl"
 88:               ></ng-icon>
 89:             </div>
 90:             <span class="text-light-text dark:text-gray-300 text-base">{{
 91:               feature
 92:             }}</span>
 93:           </li>
 94:         </ul>
 95:       </div>
 96:     </div>
 97:     <!-- Empty/Not Selected State -->
 98:     <div
 99:       *ngIf="!loading() && !room()"
100:       class="w-full text-center py-12 px-4 bg-light-background dark:bg-gray-700 rounded-lg"
101:     >
102:       <ng-icon
103:         name="tablerInfoCircle"
104:         class="h-12 w-12 mx-auto text-gray-400 dark:text-gray-500 mb-4"
105:       ></ng-icon>
106:       <p class="text-light-text dark:text-gray-300">
107:         Select a room from the floorplan to view details
108:       </p>
109:     </div>
110:   `,
111: })
112: export class RoomDetailsComponent implements OnChanges {
113:   @Input() roomId: string = '';
114:   room = signal<Room | null>(null);
115:   loading = signal<boolean>(false);
116:   roomPhotos = signal<
117:     { highRes: string; lowRes: string; highResLoaded: boolean }[]
118:   >([]);
119:   private roomService = inject(RoomService);
120:   private cdr = inject(ChangeDetectorRef);
121:   ngOnChanges(changes: SimpleChanges): void {
122:     if (changes['roomId'] && this.roomId) {
123:       this.loadRoomData(this.roomId);
124:     }
125:   }
126:   private loadRoomData(id: string): void {
127:     this.loading.set(true);
128:     this.roomService.getRoom(id).subscribe({
129:       next: (roomData) => {
130:         this.room.set(roomData);
131:         const photos = roomData.photos.map((photo) => ({
132:           highRes: photo,
133:           lowRes: photo,
134:           highResLoaded: false,
135:         }));
136:         this.roomPhotos.set(photos);
137:         this.loading.set(false);
138:         this.cdr.detectChanges();
139:       },
140:       error: (error) => {
141:         console.error('Error loading room data:', error);
142:         this.room.set(null);
143:         this.loading.set(false);
144:       },
145:     });
146:   }
147:   onHighResImageLoaded(photo: {
148:     highRes: string;
149:     lowRes: string;
150:     highResLoaded: boolean;
151:   }): void {
152:     photo.highResLoaded = true;
153:     this.cdr.detectChanges();
154:   }
155: }
</file>

<file path="src/app/pages/property/[id].page.ts">
  1: import { Component, OnInit, ChangeDetectorRef, signal } from '@angular/core';
  2: import { CommonModule, NgClass } from '@angular/common';
  3: import { ActivatedRoute, RouterLink } from '@angular/router';
  4: import { switchMap } from 'rxjs/operators';
  5: import { PropertyService } from '../../services/property.service';
  6: import { RoomService } from '../../services/room.service';
  7: import { Property } from '../../models/property.model';
  8: import { Room } from '../../models/room.model';
  9: import { PropertyStatsComponent } from '../../components/property-stats.component';
 10: import { FloorPlanComponent } from '../../components/floor-plan.component';
 11: import { RoomDetailsComponent } from '../../components/room-details.component';
 12: import { NgIcon } from '@ng-icons/core';
 13: @Component({
 14:   selector: 'app-property-detail',
 15:   standalone: true,
 16:   imports: [
 17:     CommonModule,
 18:     NgClass,
 19:     PropertyStatsComponent,
 20:     FloorPlanComponent,
 21:     RoomDetailsComponent,
 22:     RouterLink,
 23:     NgIcon
 24:   ],
 25:   template: `
 26:     <!-- Loading State -->
 27:     <div *ngIf="isLoading" class="flex justify-center items-center py-24">
 28:       <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary"></div>
 29:     </div>
 30:     <!-- Property Detail Content -->
 31:     <div *ngIf="!isLoading && property" class="bg-light-background dark:bg-gray-800 pb-16">
 32:       <!-- Property Header -->
 33:       <div class="bg-white dark:bg-gray-900 shadow-md py-8">
 34:         <div class="container mx-auto px-4">
 35:           <!-- Breadcrumbs -->
 36:           <div class="flex items-center text-sm mb-4">
 37:             <a routerLink="/" class="text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors">Home</a>
 38:             <ng-icon name="tablerChevronRight" class="h-4 w-4 mx-2 text-gray-400"></ng-icon>
 39:             <span class="text-primary">{{ property.title }}</span>
 40:           </div>
 41:           <!-- Property Title & Price -->
 42:           <div class="text-center mb-4">
 43:             <h1 class="text-3xl md:text-4xl font-medium text-dark-text dark:text-white mb-2">{{ property.title }}</h1>
 44:             <p class="text-light-text dark:text-gray-300 text-lg">{{ property.address }}</p>
 45:             <p class="text-primary text-3xl md:text-4xl font-medium mt-4">{{ property.price }}</p>
 46:           </div>
 47:         </div>
 48:       </div>
 49:       <!-- Main Content -->
 50:       <div class="container mx-auto px-4 -mt-6">
 51:         <!-- Property Gallery -->
 52:         <div class="mb-8 bg-white dark:bg-gray-900 rounded-lg shadow-md overflow-hidden">
 53:           <div class="h-64 sm:h-80 md:h-96 lg:h-112 bg-gray-200 dark:bg-gray-800">
 54:             <img [src]="property.thumbnail" [alt]="property.title" class="w-full h-full object-cover">
 55:           </div>
 56:         </div>
 57:         <!-- Property Stats Card -->
 58:         <div class="bg-white dark:bg-gray-900 rounded-lg shadow-md p-6 mb-8">
 59:           <h2 class="text-2xl font-medium text-dark-text dark:text-white mb-6">Property Overview</h2>
 60:           <app-property-stats [property]="property"></app-property-stats>
 61:           <!-- Property Description -->
 62:           <div class="mt-8">
 63:             <h3 class="text-xl font-medium text-dark-text dark:text-white mb-4">About this property</h3>
 64:             <p class="text-light-text dark:text-gray-300 leading-relaxed">{{ property.description }}</p>
 65:           </div>
 66:         </div>
 67:         <!-- Floorplan & Room Details Section -->
 68:         <div *ngIf="!isLoading && rooms.length > 0" class="flex flex-col lg:flex-row gap-8 mb-12">
 69:           <!-- Floorplan Column -->
 70:           <div class="w-full lg:w-1/2 bg-white dark:bg-gray-900 rounded-lg shadow-md p-6">
 71:             <app-floor-plan
 72:               [rooms]="rooms"
 73:               [activeRoom]="selectedRoomId()"
 74:               [floorplanImage]="property.floorplan.image"
 75:               [orientation]="property.floorplan.orientation"
 76:               (roomSelected)="onRoomSelected($event)">
 77:             </app-floor-plan>
 78:           </div>
 79:           <!-- Room Details Column -->
 80:           <div class="w-full lg:w-1/2 bg-white dark:bg-gray-900 rounded-lg shadow-md p-6">
 81:             <app-room-details [roomId]="selectedRoomId()"></app-room-details>
 82:           </div>
 83:         </div>
 84:         <!-- Contact/CTA Section -->
 85:         <div class="bg-white dark:bg-gray-900 rounded-lg shadow-md p-8 text-center">
 86:           <h2 class="text-2xl font-medium text-dark-text dark:text-white mb-4">Interested in this property?</h2>
 87:           <p class="text-light-text dark:text-gray-300 max-w-2xl mx-auto mb-6">Schedule a viewing or get more information about this property by contacting our agents.</p>
 88:           <div class="flex flex-col sm:flex-row justify-center gap-4">
 89:             <button class="text-white px-6 py-3 rounded-lg flex items-center justify-center transition-opacity" [ngClass]="{'bg-primary hover:bg-primary/90 dark:bg-primary/90 dark:hover:bg-primary': true}">
 90:               <ng-icon name="tablerPhone" class="mr-2 text-2xl"></ng-icon>
 91:               Contact Agent
 92:             </button>
 93:             <button class="border border-primary text-white dark:text-white px-6 py-3 rounded-lg flex items-center justify-center hover:bg-primary hover:text-white dark:hover:bg-primary transition-colors">
 94:               <ng-icon name="tablerCalendarEvent" class="mr-2 text-2xl"></ng-icon>
 95:               Schedule Viewing
 96:             </button>
 97:           </div>
 98:         </div>
 99:       </div>
100:     </div>
101:     <!-- Error State -->
102:     <div *ngIf="!isLoading && !property" class="container mx-auto px-4 py-24 text-center">
103:       <ng-icon name="tablerMoodSad" class="h-16 w-16 mx-auto text-gray-300 mb-4"></ng-icon>
104:       <h2 class="text-2xl font-medium text-dark-text dark:text-white mb-4">Property Not Found</h2>
105:       <p class="text-light-text dark:text-gray-300 mb-8">The property you're looking for doesn't exist or has been removed.</p>
106:       <a routerLink="/" class="text-white px-6 py-3 rounded-lg inline-flex items-center transition-opacity" [ngClass]="{'bg-primary hover:bg-primary/90 dark:bg-primary/90 dark:hover:bg-primary': true}">
107:         <ng-icon name="tablerChevronLeft" class="mr-2"></ng-icon>
108:         Back to Home
109:       </a>
110:     </div>
111:   `
112: })
113: export default class PropertyDetailPage implements OnInit {
114:   property?: Property;
115:   rooms: Room[] = [];
116:   selectedRoomId = signal('');
117:   isLoading: boolean = true;
118:   constructor(
119:     private route: ActivatedRoute,
120:     private propertyService: PropertyService,
121:     private roomService: RoomService,
122:     private cdr: ChangeDetectorRef
123:   ) {}
124:   ngOnInit(): void {
125:     this.loadPropertyData();
126:   }
127:   loadPropertyData(): void {
128:     this.isLoading = true;
129:     this.route.paramMap.pipe(
130:       switchMap(params => {
131:         const id = params.get('id') ?? '';
132:         return this.propertyService.getProperty(id);
133:       })
134:     ).subscribe({
135:       next: (property) => {
136:         this.property = property;
137:         // Once we have the property, load the rooms
138:         this.roomService.getRoomsByPropertyId(property.id).subscribe({
139:           next: (rooms) => {
140:             this.rooms = rooms;
141:             if (rooms.length > 0) {
142:               // Set the signal value
143:               this.selectedRoomId.set(rooms[0].id);
144:             }
145:             this.isLoading = false;
146:             // Ensure proper change detection
147:             this.cdr.detectChanges();
148:           },
149:           error: (error) => {
150:             console.error('Error loading rooms data:', error);
151:             this.isLoading = false;
152:           }
153:         });
154:       },
155:       error: (error) => {
156:         console.error('Error loading property data:', error);
157:         this.isLoading = false;
158:       }
159:     });
160:   }
161:   onRoomSelected(roomId: string): void {
162:     this.selectedRoomId.set(roomId);
163:     this.cdr.detectChanges();
164:   }
165: }
</file>

<file path="vite.config.ts">
 1: import { defineConfig } from 'vite';
 2: import analog from '@analogjs/platform';
 3: import tailwindcss from '@tailwindcss/vite';
 4: import devtoolsJson from 'vite-plugin-devtools-json';
 5: export default defineConfig(({ mode }) => ({
 6:   build: {
 7:     target: ['es2020'],
 8:   },
 9:   resolve: {
10:     mainFields: ['module'],
11:   },
12:   plugins: [
13:     devtoolsJson(),
14:     analog(),
15:     tailwindcss(),
16:   ],
17:   test: {
18:     globals: true,
19:     environment: 'jsdom',
20:     setupFiles: ['src/test-setup.ts'],
21:     include: ['**/*.spec.ts'],
22:     reporters: ['default'],
23:   },
24:   define: {
25:     'import.meta.vitest': mode !== 'production',
26:   },
27: }));
</file>

<file path="src/app/components/layout.component.ts">
  1: import { Component, signal, OnInit, inject } from '@angular/core';
  2: import { RouterOutlet, RouterLink, RouterLinkActive } from '@angular/router';
  3: import { CommonModule } from '@angular/common';
  4: import { ThemeService } from '../services/theme.service';
  5: import { NgIcon } from '@ng-icons/core';
  6: @Component({
  7:   selector: 'app-layout',
  8:   standalone: true,
  9:   imports: [RouterOutlet, RouterLink, RouterLinkActive, CommonModule, NgIcon],
 10:   template: `
 11:     <!-- Header -->
 12:     <header class="bg-white dark:bg-gray-900 shadow-sm sticky top-0 z-50">
 13:       <div
 14:         class="container mx-auto px-4 py-3 flex justify-between items-center"
 15:       >
 16:         <a routerLink="/" class="flex flex-row justify-start items-start relative">
 17:           <svg
 18:             width="150"
 19:             height="42"
 20:             viewBox="0 0 698 192"
 21:             xmlns="http://www.w3.org/2000/svg"
 22:           >
 23:             <g
 24:               transform="matrix(1.333333, 0, 0, -1.333333, -53.881176, 793.701355)"
 25:             >
 26:               <g transform="matrix(1, 0, 0, 1, 0, 227.155548)">
 27:                 <g>
 28:                   <path
 29:                     d="m 0,0 c -24.707,2.223 -44.073,22.975 -44.073,48.26 0,26.768 21.7,48.468 48.468,48.468 25.286,0 46.039,-19.366 48.26,-44.073 h 14.637 c -2.258,32.778 -29.545,58.673 -62.897,58.673 -34.831,0 -63.067,-28.237 -63.067,-63.068 0,-33.352 25.895,-60.639 58.673,-62.897 z"
 30:                     style="fill:#444443;fill-opacity:1;fill-rule:nonzero;stroke:none"
 31:                     transform="translate(106.5829,249.2926)"
 32:                   />
 33:                   <path
 34:                     d="M 0,0 C -2.092,-23.259 -20.607,-41.774 -43.866,-43.866 V -58.503 C -12.541,-56.345 12.479,-31.325 14.637,0 Z"
 35:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 36:                     transform="translate(159.2381,293.1588)"
 37:                   />
 38:                   <path
 39:                     d="M 0,0 V 65.819 H 43.848 V 56.642 H 10.382 V 36.988 H 38.378 V 28.366 H 10.382 L 10.382,0 Z"
 40:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 41:                     transform="translate(210.5292,284.8434)"
 42:                   />
 43:                   <path
 44:                     d="m 0,0 h 18.17 c 1.482,0 2.828,0.324 4.033,0.972 1.205,0.65 2.238,1.545 3.105,2.69 0.865,1.143 1.544,2.456 2.039,3.939 0.494,1.484 0.742,3.059 0.742,4.729 0,1.668 -0.295,3.243 -0.881,4.727 -0.588,1.483 -1.359,2.78 -2.317,3.893 -0.958,1.112 -2.071,1.993 -3.337,2.643 -1.268,0.648 -2.582,0.973 -3.94,0.973 L 0,24.566 Z m -10.382,-32.075 v 65.819 h 28.645 c 2.966,0 5.7,-0.619 8.203,-1.855 2.504,-1.237 4.65,-2.859 6.443,-4.866 1.793,-2.009 3.198,-4.297 4.218,-6.86 1.02,-2.566 1.529,-5.178 1.529,-7.833 0,-2.226 -0.309,-4.358 -0.926,-6.397 C 37.112,3.893 36.246,2.007 35.134,0.278 34.021,-1.453 32.662,-2.953 31.056,-4.218 29.448,-5.486 27.687,-6.429 25.771,-7.046 L 41.253,-32.075 H 29.479 L 15.203,-9.179 H 0 v -22.896 z"
 45:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 46:                     transform="translate(288.4901,316.9186)"
 47:                   />
 48:                   <path
 49:                     d="M 0,0 V -9.177 H -45.146 V 56.642 H -0.835 V 47.465 H -34.764 V 28.739 H -5.377 V 20.117 H -34.764 V 0 Z"
 50:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 51:                     transform="translate(398.4354,294.0202)"
 52:                   />
 53:                   <path
 54:                     d="m 0,0 c -0.618,0.679 -1.515,1.405 -2.688,2.178 -1.173,0.772 -2.548,1.499 -4.125,2.179 -1.576,0.679 -3.307,1.236 -5.191,1.668 -1.887,0.432 -3.817,0.649 -5.795,0.649 -4.388,0 -7.617,-0.803 -9.686,-2.409 -2.073,-1.608 -3.106,-3.833 -3.106,-6.675 0,-1.608 0.323,-2.921 0.974,-3.941 0.649,-1.02 1.652,-1.916 3.013,-2.688 1.358,-0.773 3.058,-1.453 5.097,-2.039 2.04,-0.588 4.418,-1.221 7.14,-1.901 3.337,-0.804 6.348,-1.7 9.038,-2.688 2.687,-0.989 4.959,-2.194 6.813,-3.615 1.854,-1.423 3.291,-3.168 4.311,-5.238 1.018,-2.071 1.529,-4.589 1.529,-7.556 0,-3.337 -0.634,-6.21 -1.9,-8.62 -1.268,-2.412 -2.998,-4.374 -5.191,-5.887 -2.196,-1.516 -4.745,-2.628 -7.648,-3.338 -2.905,-0.709 -6.026,-1.066 -9.364,-1.066 -5.005,0 -9.842,0.756 -14.508,2.271 -4.666,1.513 -8.884,3.723 -12.653,6.629 l 4.727,8.899 c 0.802,-0.804 1.961,-1.701 3.477,-2.688 1.514,-0.989 3.275,-1.901 5.284,-2.736 2.007,-0.833 4.185,-1.544 6.535,-2.131 2.349,-0.589 4.79,-0.881 7.324,-0.881 4.078,0 7.231,0.71 9.455,2.133 2.226,1.421 3.338,3.523 3.338,6.303 0,1.669 -0.417,3.06 -1.252,4.172 -0.834,1.112 -2.025,2.086 -3.568,2.921 -1.546,0.833 -3.43,1.589 -5.655,2.271 -2.225,0.678 -4.76,1.39 -7.602,2.132 -3.277,0.864 -6.135,1.776 -8.575,2.734 -2.443,0.958 -4.466,2.117 -6.071,3.476 -1.609,1.359 -2.829,2.95 -3.664,4.774 -0.833,1.822 -1.251,4.033 -1.251,6.628 0,3.213 0.618,6.073 1.855,8.576 1.235,2.503 2.921,4.603 5.053,6.304 2.131,1.699 4.648,2.981 7.553,3.846 2.906,0.865 6.057,1.298 9.457,1.298 4.45,0 8.559,-0.711 12.33,-2.132 3.767,-1.422 7.076,-3.183 9.919,-5.285 z"
 55:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 56:                     transform="translate(460.6376,335.1808)"
 57:                   />
 58:                   <path
 59:                     d="m 0,0 v -65.819 h -10.477 v 29.016 H -43.663 V -65.819 H -54.045 V 0 h 10.382 v -27.533 h 33.186 V 0 Z"
 60:                     style="fill:#79b935;fill-opacity:1;fill-rule:nonzero;stroke:none"
 61:                     transform="translate(546.2958,350.6623)"
 62:                   />
 63:                 </g>
 64:               </g>
 65:             </g>
 66:           </svg>
 67:           <span class="ml-2 text-lg tracking-[0.4em] font-light text-dark-text dark:text-white absolute top-5 left-10">Spaces</span>
 68:         </a>
 69:         <!-- Desktop Navigation -->
 70:         <nav class="hidden md:flex items-center">
 71:           <ul class="flex space-x-8">
 72:             <li>
 73:               <a
 74:                 routerLink="/"
 75:                 routerLinkActive="text-primary font-medium"
 76:                 [routerLinkActiveOptions]="{ exact: true }"
 77:                 class="text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
 78:               >
 79:                 Home
 80:               </a>
 81:             </li>
 82:             <li>
 83:               <a
 84:                 routerLink="/"
 85:                 class="text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
 86:               >
 87:                 Listings
 88:               </a>
 89:             </li>
 90:             <li>
 91:               <a
 92:                 href="#"
 93:                 class="text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
 94:               >
 95:                 Contact
 96:               </a>
 97:             </li>
 98:           </ul>
 99:           <!-- Dark mode toggle -->
100:           <div class="ml-8 flex items-center">
101:             <button
102:               class="flex items-center bg-gray-200 dark:bg-gray-600 rounded-full px-1 py-1 w-14 h-7 transition-colors duration-300"
103:               (click)="toggleTheme()"
104:             >
105:               <div class="flex justify-between items-center w-full px-1">
106:                 <!-- Sun icon for light mode -->
107:                 <ng-icon
108:                   name="tablerSun"
109:                   class="h-4 w-4 text-white"
110:                 ></ng-icon>
111:                 <!-- Moon icon for dark mode -->
112:                 <ng-icon
113:                   name="tablerMoon"
114:                   class="h-4 w-4 text-white"
115:                 ></ng-icon>
116:                 <!-- Toggle indicator -->
117:                 <div
118:                   class="bg-white dark:bg-dark-background rounded-full h-5 w-5 transform transition-transform duration-300"
119:                   [ngClass]="{'translate-x-7': isDarkMode()}"
120:                 ></div>
121:               </div>
122:             </button>
123:           </div>
124:         </nav>
125:         <!-- Mobile menu button -->
126:         <button
127:           class="md:hidden flex items-center ext-white"
128:           (click)="toggleMobileMenu()"
129:         >
130:           <ng-icon name="tablerMenu2" class="h-6 w-6"></ng-icon>
131:         </button>
132:       </div>
133:       <!-- Mobile Navigation Menu -->
134:       <div
135:         *ngIf="isMobileMenuOpen()"
136:         class="md:hidden bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 py-4 px-4 shadow-md"
137:       >
138:         <ul class="space-y-4">
139:           <li>
140:             <a
141:               routerLink="/"
142:               routerLinkActive="text-primary font-medium"
143:               [routerLinkActiveOptions]="{ exact: true }"
144:               class="block text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
145:               (click)="closeMobileMenu()"
146:             >
147:               Home
148:             </a>
149:           </li>
150:           <li>
151:             <a
152:               routerLink="/"
153:               class="block text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
154:               (click)="closeMobileMenu()"
155:             >
156:               Listings
157:             </a>
158:           </li>
159:           <li>
160:             <a
161:               href="#"
162:               class="block text-light-text dark:text-gray-300 hover:text-primary dark:hover:text-primary transition-colors duration-200"
163:               (click)="closeMobileMenu()"
164:             >
165:               Contact
166:             </a>
167:           </li>
168:           <li class="pt-2 border-t border-gray-200 dark:border-gray-700">
169:             <div class="flex items-center justify-between">
170:               <span class="text-light-text dark:text-gray-300">Dark Mode</span>
171:               <button
172:                 class="flex items-center bg-gray-200 dark:bg-gray-600 rounded-full px-1 py-1 w-14 h-7 transition-colors duration-300"
173:                 (click)="toggleTheme()"
174:               >
175:                 <div class="flex justify-between items-center w-full px-1">
176:                   <!-- Sun icon -->
177:                   <ng-icon
178:                     name="tablerSun"
179:                     class="h-4 w-4 text-yellow-500"
180:                   ></ng-icon>
181:                   <!-- Moon icon -->
182:                   <ng-icon
183:                     name="tablerMoon"
184:                     class="h-4 w-4 text-indigo-200"
185:                   ></ng-icon>
186:                   <!-- Toggle indicator -->
187:                   <div
188:                     class="bg-white dark:bg-dark-background rounded-full h-5 w-5 transform transition-transform duration-300"
189:                     [ngClass]="{'translate-x-7': isDarkMode()}"
190:                   ></div>
191:                 </div>
192:               </button>
193:             </div>
194:           </li>
195:         </ul>
196:       </div>
197:     </header>
198:     <main class="min-h-screen">
199:       <router-outlet></router-outlet>
200:     </main>
201:     <!-- Footer -->
202:     <footer class="bg-dark-background text-white py-8 mt-12">
203:       <div class="container mx-auto px-4">
204:         <div class="flex flex-col md:flex-row justify-between items-center">
205:           <div class="flex flex-col justify-start items-start mb-4 md:mb-0">
206:             <a href="/" class="flex items-center">
207:               <span class="text-xl font-medium text-primary"
208:                 >Fresh Projects</span
209:               >
210:               <span class="ml-2 text-xl font-medium text-white">Spaces</span>
211:             </a>
212:             <span class="text-gray-200 mt-2">Find your perfect home</span>
213:           </div>
214:           <div
215:             class="flex flex-col space-y-2 md:space-y-0 md:flex-row md:space-x-8"
216:           >
217:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
218:               >About Us</a
219:             >
220:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
221:               >Terms of Service</a
222:             >
223:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
224:               >Privacy Policy</a
225:             >
226:             <a href="#" class="text-gray-300 hover:text-white transition-colors"
227:               >Contact</a
228:             >
229:           </div>
230:         </div>
231:         <div
232:           class="mt-8 pt-8 border-t border-gray-800 text-center md:text-right"
233:         >
234:           <span class="text-gray-400">
235:             &copy; 2025 Fresh Projects Spaces. All rights reserved.
236:           </span>
237:         </div>
238:       </div>
239:     </footer>
240:   `,
241: })
242: export class LayoutComponent implements OnInit {
243:   private mobileMenuOpen = signal(false);
244:   private themeService = inject(ThemeService);
245:   ngOnInit() {
246:   }
247:   isDarkMode() {
248:     return this.themeService.darkMode;
249:   }
250:   toggleTheme() {
251:     this.themeService.toggleTheme();
252:   }
253:   isMobileMenuOpen() {
254:     return this.mobileMenuOpen();
255:   }
256:   toggleMobileMenu() {
257:     this.mobileMenuOpen.update(value => !value);
258:   }
259:   closeMobileMenu() {
260:     this.mobileMenuOpen.set(false);
261:   }
262: }
</file>

<file path="src/app/pages/index.page.ts">
  1: import { Component, OnInit, signal } from '@angular/core';
  2: import { CommonModule, NgClass } from '@angular/common';
  3: import { PropertyCardComponent } from '../components/property-card.component';
  4: import { PropertyService } from '../services/property.service';
  5: import { Property } from '../models/property.model';
  6: import { FormsModule } from '@angular/forms';
  7: import { NgIcon } from '@ng-icons/core';
  8: @Component({
  9:   selector: 'app-home',
 10:   standalone: true,
 11:   imports: [CommonModule, NgClass, PropertyCardComponent, FormsModule, NgIcon],
 12:   template: `
 13:     <div class="bg-light-background dark:bg-gray-800 py-16">
 14:       <div class="container mx-auto px-4">
 15:         <div class="text-center mb-12">
 16:           <h1 class="text-4xl md:text-5xl font-medium text-dark-text dark:text-white mb-4">Fresh Projects Spaces</h1>
 17:           <p class="text-light-text dark:text-gray-300 text-xl max-w-3xl mx-auto">Find your perfect home with our interactive property listings</p>
 18:         </div>
 19:         <!-- Search Box -->
 20:         <div class="max-w-4xl mx-auto mb-12">
 21:           <div class="bg-white dark:bg-gray-700 rounded-lg shadow-md p-4 flex items-center">
 22:             <div class="relative flex-grow">
 23:               <input
 24:                 type="text"
 25:                 [(ngModel)]="searchQuery"
 26:                 (ngModelChange)="performSearch()"
 27:                 placeholder="Search properties by location, features..."
 28:                 class="w-full pl-10 pr-4 py-3 rounded-md border border-gray-200 dark:border-gray-600 focus:border-primary focus:ring-1 focus:ring-primary outline-none bg-white dark:bg-gray-800 text-dark-text dark:text-white"
 29:               >
 30:               <ng-icon
 31:                 name="tablerSearch"
 32:                 class="h-5 w-5 text-gray-400 dark:text-gray-300 absolute left-3 top-1/2 transform -translate-y-1/2"
 33:               ></ng-icon>
 34:             </div>
 35:           </div>
 36:         </div>
 37:       </div>
 38:     </div>
 39:     <div class="container mx-auto px-4 py-12">
 40:       <!-- Featured Properties Heading -->
 41:       <div class="mb-8">
 42:         <h2 class="text-3xl font-medium text-dark-text dark:text-white mb-2">Featured Properties</h2>
 43:         <div class="w-20 h-1 bg-primary rounded-full"></div>
 44:       </div>
 45:       <!-- Loading State -->
 46:       <div *ngIf="loading" class="flex justify-center items-center py-16">
 47:         <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
 48:       </div>
 49:       <!-- No Properties State -->
 50:       <div *ngIf="!loading && filteredProperties().length === 0" class="text-center py-16">
 51:         <ng-icon
 52:           name="tablerHome"
 53:           class="h-16 w-16 mx-auto text-gray-300 dark:text-gray-600 mb-4"
 54:         ></ng-icon>
 55:         <p class="text-light-text dark:text-gray-300 text-lg">
 56:           {{ properties.length > 0 ? 'No properties match your search criteria.' : 'No properties available at the moment.' }}
 57:         </p>
 58:         <button
 59:           *ngIf="searchQuery && properties.length > 0"
 60:           (click)="clearSearch()"
 61:           class="mt-4 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary/90 transition-colors duration-200"
 62:         >
 63:           Clear Search
 64:         </button>
 65:       </div>
 66:       <!-- Properties List -->
 67:       <div *ngIf="!loading && filteredProperties().length > 0">
 68:         <app-property-card *ngFor="let property of filteredProperties()" [property]="property"></app-property-card>
 69:       </div>
 70:     </div>
 71:   `
 72: })
 73: export default class HomePage implements OnInit {
 74:   properties: Property[] = [];
 75:   loading: boolean = true;
 76:   searchQuery: string = '';
 77:   private allProperties = signal<Property[]>([]);
 78:   filteredProperties = signal<Property[]>([]);
 79:   constructor(private propertyService: PropertyService) {}
 80:   ngOnInit(): void {
 81:     this.propertyService.getProperties().subscribe({
 82:       next: (properties) => {
 83:         this.properties = properties;
 84:         this.allProperties.set(properties);
 85:         this.filteredProperties.set(properties);
 86:         this.loading = false;
 87:       },
 88:       error: (error) => {
 89:         console.error('Error loading properties:', error);
 90:         this.loading = false;
 91:       }
 92:     });
 93:   }
 94:   performSearch(): void {
 95:     if (!this.searchQuery) {
 96:       this.filteredProperties.set(this.allProperties());
 97:       return;
 98:     }
 99:     const query = this.searchQuery.toLowerCase().trim();
100:     const filtered = this.allProperties().filter(property => {
101:       return (
102:         property.title.toLowerCase().includes(query) ||
103:         property.address.toLowerCase().includes(query) ||
104:         property.description.toLowerCase().includes(query) ||
105:         property.stats.type.toLowerCase().includes(query) ||
106:         `${property.stats.bedrooms} bedroom`.includes(query) ||
107:         `${property.stats.bathrooms} bathroom`.includes(query) ||
108:         property.stats.area.toLowerCase().includes(query) ||
109:         property.price.toLowerCase().includes(query)
110:       );
111:     });
112:     this.filteredProperties.set(filtered);
113:   }
114:   clearSearch(): void {
115:     this.searchQuery = '';
116:     this.filteredProperties.set(this.allProperties());
117:   }
118: }
</file>

<file path="src/server/data/rooms.json">
  1: [
  2:   {
  3:     "id": "living-room-1",
  4:     "propertyId": "property-1",
  5:     "name": "Living Room",
  6:     "description": "Spacious living area with rustic charm, abundant natural light, and hardwood flooring. Perfect for entertaining or relaxing with family.",
  7:     "features": [
  8:       "Hardwood flooring",
  9:       "Large windows for natural light",
 10:       "Ceiling fan",
 11:       "Open layout",
 12:       "Recessed lighting"
 13:     ],
 14:     "photos": ["/assets/images/property-1/living-room.jpg"],
 15:     "coordinates": {
 16:       "x": 232,
 17:       "y": 285,
 18:       "width": 533,
 19:       "height": 298
 20:     }
 21:   },
 22:   {
 23:     "id": "bedroom-1",
 24:     "propertyId": "property-1",
 25:     "name": "Bedroom",
 26:     "description": "Cozy bedroom with ample space for a queen-sized bed and additional furniture. Includes built-in storage and access to the balcony.",
 27:     "features": [
 28:       "Built-in closet",
 29:       "Carpet flooring",
 30:       "Balcony access",
 31:       "En-suite bathroom",
 32:       "Blackout curtains"
 33:     ],
 34:     "photos": ["/assets/images/property-1/bedroom.jpg"],
 35:     "coordinates": {
 36:       "x": 230,
 37:       "y": 44,
 38:       "width": 416,
 39:       "height": 215
 40:     }
 41:   },
 42:   {
 43:     "id": "kitchen-1",
 44:     "propertyId": "property-1",
 45:     "name": "Kitchen",
 46:     "description": "Modern kitchen with high-end appliances, custom cabinetry, and quartz countertops. Efficiently designed for the home chef.",
 47:     "features": [
 48:       "Stainless steel appliances",
 49:       "Quartz countertops",
 50:       "Custom cabinetry",
 51:       "Tile backsplash",
 52:       "Under-cabinet lighting"
 53:     ],
 54:     "photos": ["/assets/images/property-1/kitchen.jpg"],
 55:     "coordinates": {
 56:       "x": 58,
 57:       "y": 396,
 58:       "width": 171,
 59:       "height": 184
 60:     }
 61:   },
 62:   {
 63:     "id": "bathroom-1",
 64:     "propertyId": "property-1",
 65:     "name": "Bathroom",
 66:     "description": "Elegant bathroom with modern fixtures, a spacious shower, and premium finishes. Combines functionality with style.",
 67:     "features": [
 68:       "Walk-in shower",
 69:       "Porcelain tile flooring",
 70:       "Floating vanity",
 71:       "LED mirror",
 72:       "Heated towel rack"
 73:     ],
 74:     "photos": ["/assets/images/property-1/bathroom.jpg"],
 75:     "coordinates": {
 76:       "x": 73,
 77:       "y": 36,
 78:       "width": 150,
 79:       "height": 230
 80:     }
 81:   },
 82:   {
 83:     "id": "balcony-1",
 84:     "propertyId": "property-1",
 85:     "name": "Balcony",
 86:     "description": "Private balcony offering urban views and outdoor space for relaxation or al fresco dining.",
 87:     "features": [
 88:       "Private outdoor space",
 89:       "Urban views",
 90:       "Weather-resistant flooring",
 91:       "Space for furniture",
 92:       "Exterior lighting"
 93:     ],
 94:     "photos": ["/assets/images/property-1/balcony.jpg"],
 95:     "coordinates": {
 96:       "x": 670,
 97:       "y": 36,
 98:       "width": 116,
 99:       "height": 230
100:     }
101:   },
102:   {
103:     "id": "living-room-2",
104:     "propertyId": "property-2",
105:     "name": "Living Room",
106:     "description": "Contemporary open-concept living area seamlessly flowing into the kitchen and balcony. Featuring minimalist design and premium finishes.",
107:     "features": [
108:       "Open-concept layout",
109:       "Floor-to-ceiling windows",
110:       "Engineered hardwood flooring",
111:       "Recessed lighting",
112:       "Smart home integration"
113:     ],
114:     "photos": ["/assets/images/property-2/living-room.jpg"],
115:     "coordinates": {
116:       "x": 111,
117:       "y": 670,
118:       "width": 300,
119:       "height": 333
120:     }
121:   },
122:   {
123:     "id": "kitchen-2",
124:     "propertyId": "property-2",
125:     "name": "Kitchen",
126:     "description": "Designer kitchen with top-of-the-line appliances, custom cabinetry, and waterfall island. Perfect for gourmet cooking and entertaining.",
127:     "features": [
128:       "Premium appliance package",
129:       "Quartz countertops",
130:       "Custom cabinetry",
131:       "Island with seating",
132:       "Designer lighting fixtures"
133:     ],
134:     "photos": ["/assets/images/property-2/kitchen.jpg"],
135:     "coordinates": {
136:       "x": 112,
137:       "y": 328,
138:       "width": 195,
139:       "height": 385
140:     }
141:   },
142:   {
143:     "id": "master-bedroom-2",
144:     "propertyId": "property-2",
145:     "name": "Master Bedroom",
146:     "description": "Spacious master suite with en-suite bathroom, walk-in closet, and premium finishes throughout. A private sanctuary for relaxation.",
147:     "features": [
148:       "Walk-in closet",
149:       "En-suite bathroom",
150:       "Luxury carpet flooring",
151:       "Accent lighting",
152:       "Blackout window treatments"
153:     ],
154:     "photos": ["/assets/images/property-2/master-bedroom.jpg"],
155:     "coordinates": {
156:       "x": 324,
157:       "y": 28,
158:       "width": 373,
159:       "height": 345
160:     }
161:   },
162:   {
163:     "id": "bedroom-2-2",
164:     "propertyId": "property-2",
165:     "name": "Bedroom 2",
166:     "description": "Comfortable second bedroom with ample space for a queen bed and additional furniture. Features large windows for abundant natural light.",
167:     "features": [
168:       "Spacious layout",
169:       "Built-in storage",
170:       "Large windows",
171:       "Neutral color palette",
172:       "Plush carpeting"
173:     ],
174:     "photos": ["/assets/images/property-2/bedroom-2.jpg"],
175:     "coordinates": {
176:       "x": 400,
177:       "y": 340,
178:       "width": 300,
179:       "height": 270
180:     }
181:   },
182:   {
183:     "id": "bedroom-3-2",
184:     "propertyId": "property-2",
185:     "name": "Bedroom 3",
186:     "description": "Versatile third bedroom ideal for a child's room, home office, or guest accommodation. Features custom built-ins and garden views.",
187:     "features": [
188:       "Built-in desk",
189:       "Custom closet system",
190:       "Garden views",
191:       "Natural light",
192:       "Durable flooring"
193:     ],
194:     "photos": ["/assets/images/property-2/bedroom-3.jpg"],
195:     "coordinates": {
196:       "x": 424,
197:       "y": 720,
198:       "width": 269,
199:       "height": 334
200:     }
201:   },
202:   {
203:     "id": "master-bathroom-2",
204:     "propertyId": "property-2",
205:     "name": "Master Bathroom",
206:     "description": "Luxurious master bathroom with double vanity, soaking tub, and separate shower. Features high-end fixtures and premium materials.",
207:     "features": [
208:       "Double vanity",
209:       "Soaking tub",
210:       "Walk-in shower",
211:       "Heated floors",
212:       "Designer fixtures"
213:     ],
214:     "photos": ["/assets/images/property-2/master-bathroom.jpg"],
215:     "coordinates": {
216:       "x": 107,
217:       "y": 29,
218:       "width": 202,
219:       "height": 238
220:     }
221:   },
222:   {
223:     "id": "bathroom-2-2",
224:     "propertyId": "property-2",
225:     "name": "Bathroom 2",
226:     "description": "Stylish second bathroom with premium fixtures and finishes. Designed for both functionality and aesthetics.",
227:     "features": [
228:       "Floating vanity",
229:       "Glass shower enclosure",
230:       "Porcelain tile",
231:       "Modern fixtures",
232:       "Efficient storage"
233:     ],
234:     "photos": ["/assets/images/property-2/bathroom-2.jpg"],
235:     "coordinates": {
236:       "x": 518,
237:       "y": 580,
238:       "width": 177,
239:       "height": 138
240:     }
241:   },
242:   {
243:     "id": "balcony-2",
244:     "propertyId": "property-2",
245:     "name": "Balcony",
246:     "description": "Private balcony with ample space for outdoor furniture and potted plants. The perfect spot to enjoy morning coffee or evening relaxation.",
247:     "features": [
248:       "Private outdoor space",
249:       "Garden views",
250:       "Weather-resistant flooring",
251:       "Built-in planters",
252:       "Exterior lighting"
253:     ],
254:     "photos": ["/assets/images/property-2/balcony.jpg"],
255:     "coordinates": {
256:       "x": 104,
257:       "y": 958,
258:       "width": 302,
259:       "height": 92
260:     }
261:   }
262: ]
</file>

<file path="src/styles.css">
  1: @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Raleway:wght@300;400;500;600&display=swap');
  2: @import 'tailwindcss';
  3: :root {
  4:   --color-primary: #74BA43;
  5:   --color-success: #42758F;
  6:   --color-warning: #EB6209;
  7:   --color-dark-background: #3D3D3C;
  8:   --color-light-background: #F0F5FF;
  9:   --color-dark-text: #152542;
 10:   --color-light-text: #3E547C;
 11:   --font-family-0: 'Raleway', sans-serif;
 12:   --font-family-1: 'Inter', sans-serif;
 13:   font-family: var(--font-family-1), Avenir, Helvetica, Arial, sans-serif;
 14:   font-size: 16px;
 15:   line-height: 24px;
 16:   font-weight: 400;
 17:   color: var(--color-dark-text);
 18:   background-color: #f8f9fa;
 19:   font-synthesis: none;
 20:   text-rendering: optimizeLegibility;
 21:   -webkit-font-smoothing: antialiased;
 22:   -moz-osx-font-smoothing: grayscale;
 23:   -webkit-text-size-adjust: 100%;
 24: }
 25: @media (prefers-color-scheme: dark) {
 26:   :root:not(.dark) {
 27:     color-scheme: light;
 28:   }
 29: }
 30: .dark {
 31:   --color-light-background: #2e3440;
 32:   --color-dark-text: #e5e9f0;
 33:   --color-light-text: #d8dee9;
 34:   background-color: #1e2029;
 35:   color: #e5e9f0;
 36:   color-scheme: dark;
 37: }
 38: body {
 39:   margin: 0;
 40:   min-width: 320px;
 41:   min-height: 100vh;
 42: }
 43: h1, h2, h3, h4, h5, h6 {
 44:   font-family: var(--font-family-1);
 45:   color: var(--color-dark-text);
 46:   line-height: 1.3;
 47: }
 48: h1 {
 49:   font-size: 2.5rem;
 50:   font-weight: 500;
 51: }
 52: h2 {
 53:   font-size: 2rem;
 54:   font-weight: 400;
 55: }
 56: h3 {
 57:   font-size: 1.5rem;
 58:   font-weight: 400;
 59: }
 60: p {
 61:   color: var(--color-light-text);
 62:   line-height: 1.6;
 63: }
 64: a.primary {
 65:   font-weight: 500;
 66:   color: var(--color-primary);
 67:   text-decoration: inherit;
 68: }
 69: a:hover {
 70:   opacity: 0.9;
 71: }
 72: button {
 73:   border-radius: 8px;
 74:   border: 1px solid transparent;
 75:   padding: 0.6em 1.2em;
 76:   font-size: 1em;
 77:   font-weight: 500;
 78:   font-family: var(--font-family-1);
 79:   background-color: var(--color-primary);
 80:   color: white;
 81:   cursor: pointer;
 82:   transition: opacity 0.25s;
 83: }
 84: button:hover {
 85:   opacity: 0.9;
 86: }
 87: button:focus,
 88: button:focus-visible {
 89:   outline: 4px auto var(--color-primary);
 90: }
 91: .bg-primary {
 92:   background-color: var(--color-primary);
 93: }
 94: .text-primary {
 95:   color: var(--color-primary);
 96: }
 97: .border-primary {
 98:   border-color: var(--color-primary);
 99: }
100: .bg-success {
101:   background-color: var(--color-success);
102: }
103: .text-success {
104:   color: var(--color-success);
105: }
106: .bg-warning {
107:   background-color: var(--color-warning);
108: }
109: .text-warning {
110:   color: var(--color-warning);
111: }
112: .bg-dark-background {
113:   background-color: var(--color-dark-background);
114: }
115: .text-dark-text {
116:   color: var(--color-dark-text);
117: }
118: .text-light-text {
119:   color: var(--color-light-text);
120: }
121: .bg-light-background {
122:   background-color: var(--color-light-background);
123: }
124: :root:not(.dark) .bg-white {
125:   background-color: #ffffff !important;
126: }
127: .dark .bg-white {
128:   background-color: #2e3440;
129: }
130: .dark .bg-light-background {
131:   background-color: #3b4252;
132: }
133: .dark .text-dark-text {
134:   color: #eceff4;
135: }
136: .dark .text-light-text {
137:   color: #d8dee9;
138: }
139: .dark .shadow-md {
140:   box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
141: }
142: .dark .border-gray-200 {
143:   border-color: #4c566a;
144: }
</file>

<file path="package.json">
 1: {
 2:   "name": "house-showcase",
 3:   "version": "0.0.0",
 4:   "type": "module",
 5:   "engines": {
 6:     "node": ">=18.19.1"
 7:   },
 8:   "scripts": {
 9:     "start": "npm run dev",
10:     "mix": "npx repomix",
11:     "ng": "ng",
12:     "dev": "ng serve",
13:     "build": "ng build",
14:     "watch": "ng build --watch --configuration development",
15:     "test": "ng test"
16:   },
17:   "private": true,
18:   "dependencies": {
19:     "@analogjs/content": "^1.16.1",
20:     "@analogjs/router": "^1.16.1",
21:     "@angular/animations": "^19.0.0",
22:     "@angular/common": "^19.0.0",
23:     "@angular/compiler": "^19.0.0",
24:     "@angular/core": "^19.0.0",
25:     "@angular/forms": "^19.0.0",
26:     "@angular/platform-browser": "^19.0.0",
27:     "@angular/platform-browser-dynamic": "^19.0.0",
28:     "@angular/platform-server": "^19.0.0",
29:     "@angular/router": "^19.0.0",
30:     "@ng-icons/core": "^28.0.0",
31:     "@ng-icons/tabler-icons": "^28.0.0",
32:     "front-matter": "^4.0.2",
33:     "marked": "^15.0.7",
34:     "marked-gfm-heading-id": "^4.1.1",
35:     "marked-highlight": "^2.2.1",
36:     "marked-mangle": "^1.1.10",
37:     "prismjs": "^1.29.0",
38:     "rxjs": "~7.8.0",
39:     "tslib": "^2.3.0",
40:     "zone.js": "~0.15.0"
41:   },
42:   "devDependencies": {
43:     "@analogjs/platform": "^1.16.1",
44:     "@analogjs/vite-plugin-angular": "^1.16.1",
45:     "@analogjs/vitest-angular": "^1.16.1",
46:     "@angular-devkit/build-angular": "^19.0.0",
47:     "@angular/build": "^19.0.0",
48:     "@angular/cli": "^19.0.0",
49:     "@angular/compiler-cli": "^19.0.0",
50:     "@tailwindcss/vite": "^4.1.7",
51:     "autoprefixer": "^10.4.21",
52:     "jsdom": "^22.0.0",
53:     "postcss": "^8.5.3",
54:     "sharp": "^0.33.5",
55:     "tailwindcss": "^4.1.7",
56:     "typescript": "~5.8.0",
57:     "vite": "^6.0.0",
58:     "vite-plugin-devtools-json": "^0.1.0",
59:     "vite-tsconfig-paths": "^4.2.0",
60:     "vitest": "^3.0.0"
61:   }
62: }
</file>

<file path="src/app/components/floor-plan.component.ts">
  1: import {
  2:   Component,
  3:   EventEmitter,
  4:   Input,
  5:   Output,
  6:   OnChanges,
  7:   SimpleChanges,
  8:   signal,
  9:   inject,
 10:   ChangeDetectorRef,
 11: } from '@angular/core';
 12: import { CommonModule, NgClass } from '@angular/common';
 13: import { Room } from '../models/room.model';
 14: import { NgIcon } from '@ng-icons/core';
 15: @Component({
 16:   selector: 'app-floor-plan',
 17:   standalone: true,
 18:   imports: [CommonModule, NgClass, NgIcon],
 19:   template: `
 20:     <div class="w-full">
 21:       <h3 class="text-xl font-medium text-dark-text dark:text-white mb-4">
 22:         Interactive Floorplan
 23:       </h3>
 24:       <div
 25:         class="mb-6 px-4 py-3 bg-light-background dark:bg-gray-700 rounded-lg text-center"
 26:       >
 27:         <p
 28:           class="text-sm text-light-text dark:text-gray-300 mb-0 flex items-center justify-center"
 29:         >
 30:           <ng-icon name="tablerInfoCircle" class="mr-2 text-primary"></ng-icon>
 31:           Click on a room to view detailed information and photos
 32:         </p>
 33:       </div>
 34:       <div
 35:         [class.floorplan-horizontal]="orientation === 'horizontal'"
 36:         [class.floorplan-vertical]="orientation === 'vertical'"
 37:         class="floorplan-container w-full relative mx-auto rounded-lg overflow-hidden"
 38:       >
 39:         <!-- Floorplan Image -->
 40:         <img
 41:           [src]="floorplanImage"
 42:           alt="Floorplan"
 43:           class="w-full border select-none border-gray-200 dark:border-gray-700 rounded-lg"
 44:         />
 45:         <!-- Clickable Room Areas with Integrated Labels -->
 46:         <div
 47:           *ngFor="let room of rooms"
 48:           [style.left.%]="getPercentPosition(room.coordinates.x, true)"
 49:           [style.top.%]="getPercentPosition(room.coordinates.y, false)"
 50:           [style.width.%]="getPercentSize(room.coordinates.width, true)"
 51:           [style.height.%]="getPercentSize(room.coordinates.height, false)"
 52:           [ngClass]="{
 53:             'bg-[#74BA43]/50': activeRoomSignal() === room.id,
 54:             'border-[#74BA43]': activeRoomSignal() === room.id,
 55:             'border-2': activeRoomSignal() === room.id,
 56:             'bg-[#74BA43]/10': activeRoomSignal() !== room.id,
 57:             'hover:bg-[#74BA43]/30': activeRoomSignal() !== room.id,
 58:             'hover:border-[#74BA43]': activeRoomSignal() !== room.id,
 59:             'border-[#74BA43]/30': activeRoomSignal() !== room.id,
 60:             'hover:border-2': activeRoomSignal() !== room.id
 61:           }"
 62:           class="absolute cursor-pointer hover:backdrop-blur-xs select-none group p-1 transition-all duration-200 border rounded-md flex flex-col items-start justify-start z-10"
 63:           (click)="selectRoom(room.id)"
 64:         >
 65:           <!-- Integrated Room Label -->
 66:           <div
 67:             class="px-2 py-1 opacity-0 group-hover:opacity-100 bg-white dark:bg-gray-800 rounded-full text-xs text-left flex-nowrap whitespace-nowrap font-medium shadow-sm select-none transition-colors duration-300 flex flex-row items-start justify-start text-dark-text dark:text-white"
 68:             [ngClass]="{  'opacity-100':activeRoomSignal() === room.id, }"
 69:           >
 70:             {{ room.name }}
 71:           </div>
 72:         </div>
 73:       </div>
 74:     </div>
 75:   `,
 76:   styles: [
 77:     `
 78:       .floorplan-container {
 79:         max-width: 800px;
 80:         margin: 0 auto;
 81:         box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
 82:           0 2px 4px -1px rgba(0, 0, 0, 0.06);
 83:       }
 84:       .floorplan-horizontal {
 85:         max-width: 800px;
 86:       }
 87:       .floorplan-vertical {
 88:         max-width: 500px;
 89:       }
 90:     `,
 91:   ],
 92: })
 93: export class FloorPlanComponent implements OnChanges {
 94:   @Input() rooms: Room[] = [];
 95:   @Input() activeRoom: string = '';
 96:   @Input() floorplanImage: string = '';
 97:   @Input() orientation: 'horizontal' | 'vertical' = 'horizontal';
 98:   @Output() roomSelected = new EventEmitter<string>();
 99:   activeRoomSignal = signal('');
100:   // Reference dimensions of the original floorplan images
101:   referenceWidth = 800;
102:   referenceHeight = 624;
103:   cdr = inject(ChangeDetectorRef);
104:   ngOnChanges(changes: SimpleChanges): void {
105:     if (changes['orientation']) {
106:       this.referenceWidth = this.orientation === 'horizontal' ? 800 : 550;
107:       this.referenceHeight = this.orientation === 'horizontal' ? 624 : 800;
108:     }
109:     if (changes['activeRoom']) {
110:       this.activeRoomSignal.set(this.activeRoom);
111:     }
112:   }
113:   getPercentPosition(pixelValue: number, isHorizontal: boolean): number {
114:     const reference =
115:       this.orientation === 'horizontal'
116:         ? isHorizontal
117:           ? this.referenceWidth
118:           : this.referenceHeight
119:         : isHorizontal
120:         ? this.referenceWidth * 1.45
121:         : this.referenceHeight * 1.3;
122:     return (pixelValue / reference) * 100;
123:   }
124:   getPercentSize(pixelValue: number, isHorizontal: boolean): number {
125:     const reference =
126:       this.orientation === 'horizontal'
127:         ? isHorizontal
128:           ? this.referenceWidth
129:           : this.referenceHeight
130:         : isHorizontal
131:         ? this.referenceWidth * 1.45
132:         : this.referenceHeight * 1.5;
133:     return (pixelValue / reference) * 100;
134:   }
135:   selectRoom(roomId: string): void {
136:     this.activeRoomSignal.set(roomId);
137:     this.roomSelected.emit(roomId);
138:     this.cdr.detectChanges();
139:   }
140: }
</file>

</files>
